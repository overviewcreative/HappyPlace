!function(){var t={562:function(){!function(t){"use strict";const e={init(){this.bindEvents()},bindEvents(){let s;t("#config-form").on("submit",this.saveConfig.bind(this)),t("#reset-config").on("click",this.resetConfig.bind(this)),t("#config-form input, #config-form select, #config-form textarea").on("change",function(){clearTimeout(s),s=setTimeout(()=>{e.saveConfig(null,!0)},2e3)})},saveConfig(e,s=!1){e&&e.preventDefault();const n=t("#config-form"),i=n.data("group"),a=new FormData(n[0]),o={};for(let[t,e]of a.entries())if(t.startsWith("config[")&&t.endsWith("]")){const s=t.slice(7,-1);n.find(`input[name="${t}"][type="checkbox"]`).length?o[s]="1"===e:o[s]=e}n.find('input[type="checkbox"]').each(function(){const e=t(this).attr("name");if(e&&e.startsWith("config[")&&!t(this).is(":checked")){const t=e.slice(7,-1);o[t]=!1}}),s||n.find(".button-primary").prop("disabled",!0).text("Saving..."),t.ajax({url:hphConfigAdmin.ajaxUrl,type:"POST",data:{action:"hph_update_config",nonce:hphConfigAdmin.nonce,group:i,config:o},success:t=>{t.success?s||this.showNotice(hphConfigAdmin.strings.saved,"success"):this.showNotice(t.data||hphConfigAdmin.strings.error,"error")},error:()=>{this.showNotice(hphConfigAdmin.strings.error,"error")},complete:()=>{s||n.find(".button-primary").prop("disabled",!1).text("Save Configuration")}})},resetConfig(e){if(e.preventDefault(),!confirm(hphConfigAdmin.strings.confirmReset))return;const s=t(e.target).data("group"),n=t(e.target);n.prop("disabled",!0).text("Resetting..."),t.ajax({url:hphConfigAdmin.ajaxUrl,type:"POST",data:{action:"hph_reset_config",nonce:hphConfigAdmin.nonce,group:s},success:t=>{t.success?location.reload():this.showNotice(t.data||hphConfigAdmin.strings.error,"error")},error:()=>{this.showNotice(hphConfigAdmin.strings.error,"error")},complete:()=>{n.prop("disabled",!1).text("Reset to Defaults")}})},showNotice(e,s="info"){const n=t(`\n                <div class="notice notice-${s} is-dismissible">\n                    <p>${e}</p>\n                    <button type="button" class="notice-dismiss">\n                        <span class="screen-reader-text">Dismiss this notice.</span>\n                    </button>\n                </div>\n            `);t(".hph-config-manager h1").after(n),"success"===s&&setTimeout(()=>{n.fadeOut()},3e3),n.find(".notice-dismiss").on("click",function(){n.fadeOut()})}};t(document).ready(()=>{e.init()})}(jQuery)},603:function(t,e,s){"use strict";s(830),s(991),s(623),s(562);function n(){"function"==typeof initEnhancedFields&&initEnhancedFields(),"function"==typeof modernAdminInit&&modernAdminInit(),"function"==typeof configAdminInit&&configAdminInit()}t=s.hmd(t),document.addEventListener("DOMContentLoaded",function(){console.log("Happy Place Admin loaded"),n()}),t.exports&&(t.exports={name:"happy-place-admin",version:"1.0.0",initAdminFeatures:n})},623:function(){!function(t){"use strict";window.hphAdmin={config:{ajaxUrl:hphModernAdmin.ajaxUrl,nonce:hphModernAdmin.nonce,endpoints:hphModernAdmin.endpoints,capabilities:hphModernAdmin.capabilities,i18n:hphModernAdmin.i18n},cache:new Map,activeRequests:new Set,init:function(){console.log("HPH Modern Admin: Initializing..."),console.log("HPH Modern Admin: Config:",this.config),this.bindEvents(),this.loadPageData(),this.setupAutoRefresh(),console.log("HPH Modern Admin: Initialization complete")},bindEvents:function(){t(document).on("click",".hph-format-option",this.handleFormatSelection.bind(this)),t(document).on("click","[data-tool]",this.handleToolLaunch.bind(this)),t(document).on("click",'[onclick*="refresh"]',this.handleRefresh.bind(this)),t(document).on("click",".hph-tab-nav a",this.handleTabSwitch.bind(this)),t(document).on("submit",".hph-ajax-form",this.handleFormSubmit.bind(this))},loadPageData:function(){const e=t(".hph-modern-admin").data("page");switch(console.log("HPH Modern Admin: Loading data for page:",e),e){case"dashboard":this.loadDashboardData();break;case"listings":this.loadListingsData();break;case"marketing-suite":this.initMarketingSuite();break;case"integrations":this.loadIntegrationsData();break;case"system-health":this.loadSystemHealthData();break;default:console.log("HPH Modern Admin: No specific data loading for page:",e)}},loadDashboardData:function(){this.ajaxRequest("dashboard_quick_stats",{}).then(t=>{this.renderDashboardStats(t.data)}).catch(t=>{console.error("Dashboard stats failed:",t),this.renderDashboardStats({total_listings:"--",total_views:"--",active_integrations:"--",health_status:"unknown"}),this.showError("Dashboard data unavailable (using fallback)")}),this.ajaxRequest("validate_system",{}).then(t=>{this.renderSystemStatus(t.data)}).catch(t=>{console.warn("System status unavailable:",t),this.renderSystemStatus({overall:"unknown"})})},loadListingsData:function(){this.ajaxRequest("get_listings",{}).then(t=>{this.renderListingsOverview(t.data)}).catch(t=>{console.error("Listings data failed:",t),this.renderListingsOverview([]),this.showError("Listings data unavailable (using fallback)")})},initMarketingSuite:function(){void 0!==window.marketingSuiteGenerator?console.log("Marketing Suite Generator already loaded"):this.loadMarketingSuiteGenerator()},loadMarketingSuiteGenerator:function(){const t=document.createElement("script");t.src=hphModernAdmin.pluginUrl+"/assets/js/marketing-suite-generator.js",t.onload=()=>{console.log("Marketing Suite Generator loaded")},document.head.appendChild(t);const e=document.createElement("link");e.rel="stylesheet",e.href=hphModernAdmin.pluginUrl+"/assets/css/marketing-suite-generator.css",document.head.appendChild(e)},loadIntegrationsData:function(){this.ajaxRequest("integration_status",{}).then(t=>{this.renderIntegrationStatus(t.data)}).catch(t=>{this.showError("Failed to load integrations data")})},loadSystemHealthData:function(){this.ajaxRequest("system_health",{}).then(t=>{this.renderSystemHealth(t.data)}).catch(t=>{this.showError("Failed to load system health data")})},handleFormatSelection:function(e){e.preventDefault();const s=t(e.currentTarget),n=s.data("format");t(".hph-format-option").removeClass("selected"),s.addClass("selected"),this.showGeneratorInterface(n)},showGeneratorInterface:function(e){t("#hph-generator-interface").show().addClass("hph-fade-in"),void 0!==window.marketingSuiteGenerator&&window.marketingSuiteGenerator.initFormat(e)},handleToolLaunch:function(e){e.preventDefault();const s=t(e.currentTarget).data("tool");this.launchTool(s)},launchTool:function(t){console.log("Launching tool:",t),this.showNotice(this.config.i18n.loading+" "+t,"info"),this.loadToolInterface(t)},loadToolInterface:function(e){const s=t("#hph-tool-interfaces"),n=this.createModal(e);s.append(n),this.ajaxRequest("load_tool",{tool:e}).then(t=>{n.find(".hph-modal-content").html(t.data.html)}).catch(t=>{this.showError("Failed to load tool: "+e)})},createModal:function(e){const s=t(`\n                <div class="hph-modal" id="hph-modal-${e}">\n                    <div class="hph-modal-overlay"></div>\n                    <div class="hph-modal-dialog">\n                        <div class="hph-modal-header">\n                            <h3>${e.replace("-"," ").toUpperCase()}</h3>\n                            <button class="hph-modal-close">&times;</button>\n                        </div>\n                        <div class="hph-modal-content">\n                            <div class="hph-loading-placeholder">Loading tool...</div>\n                        </div>\n                    </div>\n                </div>\n            `);return s.find(".hph-modal-close, .hph-modal-overlay").on("click",()=>{s.remove()}),s},handleRefresh:function(e){e.preventDefault();const s=t(e.currentTarget).attr("onclick");s.includes("refreshListings")?this.refreshListings():s.includes("refreshDashboard")&&this.loadDashboardData()},refreshListings:function(){this.showNotice(this.config.i18n.loading,"info"),this.cache.delete("get_listings"),this.loadListingsData()},handleFormSubmit:function(e){e.preventDefault();const s=t(e.currentTarget),n=s.data("action"),i=new FormData(s[0]);this.ajaxRequest(n,i).then(t=>{this.showNotice(this.config.i18n.saved,"success")}).catch(t=>{this.showError("Form submission failed")})},handleTabSwitch:function(e){e.preventDefault();const s=t(e.currentTarget),n=s.attr("href");s.closest(".hph-tab-nav").find("a").removeClass("nav-tab-active"),s.addClass("nav-tab-active"),t(".hph-tab-content").hide(),t(n).show(),console.log("HPH Admin: Switched to tab:",n)},ajaxRequest:function(e,s={}){const n=e+JSON.stringify(s);if(console.log("HPH Admin: Making AJAX request for action:",e),this.cache.has(n)&&"object"==typeof s&&!s instanceof FormData)return console.log("HPH Admin: Using cached response for:",e),Promise.resolve(this.cache.get(n));if(this.activeRequests.has(n))return console.log("HPH Admin: Request already in progress for:",e),Promise.reject(new Error("Request already in progress"));this.activeRequests.add(n);const i={action:"hph_"+e,nonce:this.config.nonce,...s};return console.log("HPH Admin: Request data:",i),new Promise((s,a)=>{t.ajax({url:this.config.ajaxUrl,type:"POST",data:i,dataType:"json",success:t=>{this.activeRequests.delete(n),console.log("HPH Admin: Response for",e,":",t),t.success?(this.cache.set(n,t),s(t)):(console.error("HPH Admin: AJAX error for",e,":",t.data),a(new Error(t.data||"Unknown error")))},error:(t,s,i)=>{this.activeRequests.delete(n),console.error("HPH Admin: AJAX request failed for",e,":",s,i),a(new Error(s||i))}})})},renderDashboardStats:function(e){const s=t("#hph-dashboard-stats");if(!e)return void s.html('<div class="hph-stats-container"><p>Loading statistics...</p></div>');const n=e.stats||e,i=`\n                <div class="hph-stats-container">\n                    <div class="hph-stat-card">\n                        <div class="hph-stat-number">${n.total_listings||n.listings||0}</div>\n                        <div class="hph-stat-label">Active Listings</div>\n                    </div>\n                    <div class="hph-stat-card">\n                        <div class="hph-stat-number">${n.total_views||n.views||0}</div>\n                        <div class="hph-stat-label">Total Views</div>\n                    </div>\n                    <div class="hph-stat-card">\n                        <div class="hph-stat-number">${n.active_integrations||n.integrations||0}</div>\n                        <div class="hph-stat-label">Active Integrations</div>\n                    </div>\n                    <div class="hph-stat-card">\n                        <div class="hph-stat-indicator hph-status-${n.health_status||"healthy"}">\n                            <span class="dashicons dashicons-${"healthy"===n.health_status?"yes-alt":"warning"}"></span>\n                        </div>\n                        <div class="hph-stat-label">System Health</div>\n                    </div>\n                </div>\n            `;s.html(i).addClass("hph-fade-in")},renderSystemStatus:function(e){const s=t("#hph-system-status");if(!e)return void s.html("<p>System status unavailable</p>");const n=`\n                <div class="hph-system-overview">\n                    <div class="hph-status-item">\n                        <span class="hph-status-indicator hph-status-${e.overall||"healthy"}"></span>\n                        <span>Overall Status: ${e.overall||"Healthy"}</span>\n                    </div>\n                </div>\n            `;s.html(n).addClass("hph-fade-in")},renderListingsOverview:function(e){const s=t("#hph-listings-overview");if(!e)return void s.html("<p>Loading listings...</p>");const n=e.listings||e.data||e;if(!Array.isArray(n)||0===n.length)return void s.html("<p>No listings found</p>");let i='<div class="hph-listings-grid">';n.forEach(t=>{i+=`\n                    <div class="hph-listing-card">\n                        <h4>${t.title||t.post_title||"Untitled Listing"}</h4>\n                        <p>Status: ${t.status||t.post_status||"Unknown"}</p>\n                        <div class="hph-listing-actions">\n                            <a href="${t.edit_url||"#"}" class="button button-small">Edit</a>\n                        </div>\n                    </div>\n                `}),i+="</div>",s.html(i).addClass("hph-fade-in")},renderIntegrationStatus:function(e){const s=t("#hph-integration-status");if(!e||!e.integrations)return void s.html("<p>No integrations configured</p>");let n='<div class="hph-integration-grid">';e.integrations.forEach(t=>{n+=`\n                    <div class="hph-integration-card">\n                        <div class="hph-integration-icon">\n                            <span class="dashicons dashicons-${t.icon||"admin-plugins"}"></span>\n                        </div>\n                        <div class="hph-integration-info">\n                            <div class="hph-integration-name">${t.name}</div>\n                            <div class="hph-integration-status-text hph-status-${t.status}">\n                                ${t.status_text}\n                            </div>\n                        </div>\n                        <div class="hph-integration-actions">\n                            <button class="button button-small" onclick="hphAdmin.toggleIntegration('${t.id}')">\n                                ${t.active?"Disable":"Enable"}\n                            </button>\n                        </div>\n                    </div>\n                `}),n+="</div>",s.html(n).addClass("hph-fade-in")},toggleIntegration:function(t){this.ajaxRequest("toggle_integration",{integration_id:t}).then(t=>{this.showNotice("Integration toggled successfully","success"),this.loadIntegrationsData()}).catch(t=>{this.showError("Failed to toggle integration")})},setupAutoRefresh:function(){setInterval(()=>{t('.hph-modern-admin[data-page="dashboard"]').length&&(this.cache.delete("dashboard_quick_stats"),this.loadDashboardData())},3e5)},runSystemTest:function(){this.showNotice("Running system test...","info"),this.ajaxRequest("validate_system",{}).then(t=>{this.displayTestResults(t.data)}).catch(t=>{this.showError("System test failed")})},clearAllCaches:function(){this.showNotice("Clearing caches...","info"),this.ajaxRequest("refresh_cache",{}).then(t=>{this.showNotice("Caches cleared successfully","success"),this.cache.clear()}).catch(t=>{this.showError("Failed to clear caches")})},regenerateAssets:function(){this.showNotice("Regenerating assets...","info"),this.ajaxRequest("regenerate_assets",{}).then(t=>{this.showNotice("Assets regenerated successfully","success")}).catch(t=>{this.showError("Failed to regenerate assets")})},displayTestResults:function(e){const s=t("#hph-test-results");s.show();let n="<h3>System Test Results</h3>";n+='<div class="hph-test-results-grid">',Object.entries(e).forEach(([t,e])=>{const s=e.success?"success":"error";n+=`\n                    <div class="hph-test-result hph-test-${s}">\n                        <strong>${t}</strong>: ${e.message}\n                    </div>\n                `}),n+="</div>",s.html(n).addClass("hph-fade-in")},showNotice:function(e,s="info"){const n=t(`\n                <div class="hph-notice notice-${s} is-dismissible">\n                    <p>${e}</p>\n                    <button type="button" class="notice-dismiss">\n                        <span class="screen-reader-text">Dismiss this notice.</span>\n                    </button>\n                </div>\n            `);t(".hph-modern-admin").prepend(n),setTimeout(()=>{n.fadeOut(()=>n.remove())},5e3),n.find(".notice-dismiss").on("click",()=>{n.fadeOut(()=>n.remove())})},showError:function(t){this.showNotice(t,"error"),console.error("HPH Admin Error:",t)}},t(document).ready(function(){hphAdmin.init()})}(jQuery)},830:function(){!function(t){"use strict";window.hphAdmin={ajax:function(e,s,n){const i={action:e,nonce:hphEnhancedAdmin.nonce,...s},a={beforeSend:function(){console.log("AJAX Request:",e,s)},success:function(t){console.log("AJAX Success:",t)},error:function(t,e,s){console.error("AJAX Error:",s,t.responseText),this.showNotice("AJAX request failed: "+s,"error")}.bind(this)};t.ajax({url:hphEnhancedAdmin.ajaxUrl,type:"POST",data:i,dataType:"json",...a,...n})},testAjax:function(){console.log("Testing AJAX connectivity..."),console.log("hphEnhancedAdmin config:",hphEnhancedAdmin),this.ajax("hph_dashboard_quick_stats",{},{success:function(t){console.log("✅ AJAX Test Success:",t),this.showNotice("AJAX connectivity test passed!","success")}.bind(this),error:function(t,e,s){console.error("❌ AJAX Test Failed:",s,t.responseText),this.showNotice("AJAX connectivity test failed: "+s,"error")}.bind(this)})},loadDashboardStats:function(){this.ajax("hph_dashboard_quick_stats",{},{success:function(t){t.success&&this.renderDashboardStats(t.data)}.bind(this)})},loadListingsOverview:function(t={}){this.ajax("hph_get_listings_overview",{filters:t,page:1,per_page:20},{success:function(t){t.success&&this.renderListingsOverview(t.data)}.bind(this)})},loadIntegrationStatus:function(t=!1){this.ajax("hph_get_integration_status",{refresh:t},{success:function(t){t.success&&this.renderIntegrationStatus(t.data)}.bind(this)})},testIntegrationConnection:function(t){this.ajax("hph_test_integration_connection",{integration:t},{beforeSend:function(){this.showLoading(`Testing ${t} connection...`)}.bind(this),success:function(e){this.hideLoading(),e.success?this.showNotice(`${t} connection successful!`,"success"):this.showNotice(`${t} connection failed: ${e.data.message}`,"error")}.bind(this)})},testAllIntegrations:function(){const t=["airtable","mls","google_maps","email_marketing"];let e=0;this.showNotice("Testing all integrations...","info"),t.forEach(s=>{this.ajax("hph_test_integration_connection",{integration:s},{success:function(n){e++,this.updateIntegrationStatus(s,n.data),e===t.length&&this.showNotice("All integration tests completed","success")}.bind(this)})})},loadSystemMetrics:function(){this.ajax("hph_get_system_metrics",{},{success:function(t){t.success&&this.renderSystemMetrics(t.data)}.bind(this)})},runMaintenanceTask:function(t){this.ajax("hph_run_maintenance_task",{task:t},{beforeSend:function(){this.showLoading(`Running ${t} task...`)}.bind(this),success:function(e){this.hideLoading(),e.success?(this.showNotice(`${t} task completed successfully!`,"success"),this.loadSystemMetrics()):this.showNotice(`${t} task failed: ${e.data.message}`,"error")}.bind(this)})},openTool:function(e){console.log("Opening tool:",e),t(".hph-modal").hide();const s={"csv-import":"hph-csv-import-modal","flyer-generator":"hph-flyer-generator-modal","image-optimization":"hph-image-optimization-modal"}[e];if(s){const n=t("#"+s);n.length?(n.show(),this.showNotice(`Opened ${e} tool`,"info"),this.loadToolContent(e)):(this.showNotice(`Modal for ${e} not found`,"error"),console.error("Modal not found:",s))}else this.showNotice(`Tool ${e} not configured`,"error"),console.error("Tool not mapped:",e)},closeTool:function(e){if(e){const s={"csv-import":"hph-csv-import-modal","flyer-generator":"hph-flyer-generator-modal","image-optimization":"hph-image-optimization-modal"}[e];s&&t("#"+s).hide()}else t(".hph-modal").hide();this.showNotice("Closed tool","info")},loadToolContent:function(t){switch(console.log("Loading content for tool:",t),t){case"csv-import":this.loadCsvImportTool();break;case"flyer-generator":this.loadFlyerGeneratorTool();break;case"image-optimization":this.loadImageOptimizationTool();break;default:console.log("No specific content loader for tool:",t)}},loadCsvImportTool:function(){const e=t("#hph-csv-import-content");e.html("<p>Loading CSV import tool...</p>"),setTimeout(()=>{e.html('\n                    <div class="hph-csv-import-tool">\n                        <h3>CSV Import Tool</h3>\n                        <p>Upload a CSV file to import listings:</p>\n                        <input type="file" accept=".csv" id="csv-file-input">\n                        <button class="button button-primary" onclick="hphAdmin.processCsvImport()">Import CSV</button>\n                    </div>\n                ')},500)},loadFlyerGeneratorTool:function(){const e=t("#hph-flyer-generator-content");e.html("<p>Loading flyer generator...</p>"),setTimeout(()=>{e.html('\n                    <div class="hph-flyer-generator-tool">\n                        <h3>Flyer Generator</h3>\n                        <p>The flyer generator is available in the Marketing Suite.</p>\n                        <button class="button button-primary" onclick="window.location.href=\'admin.php?page=happy-place-marketing-suite\'">Open Marketing Suite</button>\n                    </div>\n                ')},500)},loadImageOptimizationTool:function(){const e=t("#hph-image-optimization-content");0!==e.length?(e.html("<p>Loading image optimization tool...</p>"),setTimeout(()=>{e.html('\n                    <div class="hph-image-optimization-tool">\n                        <h3>Image Optimization</h3>\n                        <p>Tool coming soon...</p>\n                    </div>\n                ')},500)):this.showNotice("Image optimization tool not available yet","warning")},processCsvImport:function(){document.getElementById("csv-file-input").files.length?this.showNotice("CSV import functionality coming soon...","info"):this.showNotice("Please select a CSV file first","error")},renderDashboardStats:function(e){let s='<div class="hph-stats-grid">';Object.keys(e).forEach(t=>{const n=e[t];s+=`\n                    <div class="hph-stat-card">\n                        <div class="stat-icon">\n                            <span class="dashicons ${n.icon||"dashicons-chart-area"}"></span>\n                        </div>\n                        <div class="stat-content">\n                            <div class="stat-number">${n.count||n.value||0}</div>\n                            <div class="stat-label">${n.label||t}</div>\n                        </div>\n                    </div>\n                `}),s+="</div>",t("#hph-dashboard-stats").html(s)},renderListingsOverview:function(e){let s="";e.listings&&e.listings.length>0?(s+=`\n                    <div class="hph-listings-summary">\n                        <div class="hph-stat">\n                            <span class="number">${e.total}</span>\n                            <span class="label">Total Listings</span>\n                        </div>\n                        <div class="hph-stat">\n                            <span class="number">${e.current_page}</span>\n                            <span class="label">Current Page</span>\n                        </div>\n                        <div class="hph-stat">\n                            <span class="number">${e.pages}</span>\n                            <span class="label">Total Pages</span>\n                        </div>\n                    </div>\n                `,s+='<div class="hph-listings-table">',s+='<table class="wp-list-table widefat fixed striped">',s+="<thead><tr>",s+='<th><input type="checkbox" id="select-all-listings"></th>',s+="<th>Title</th>",s+="<th>Status</th>",s+="<th>Price</th>",s+="<th>Address</th>",s+="<th>Date</th>",s+="<th>Actions</th>",s+="</tr></thead>",s+="<tbody>",e.listings.forEach(t=>{s+=`\n                        <tr>\n                            <td><input type="checkbox" name="listing_ids[]" value="${t.id}"></td>\n                            <td><strong>${t.title}</strong></td>\n                            <td><span class="status-${t.status}">${t.status||"N/A"}</span></td>\n                            <td>${t.price?"$"+Number(t.price).toLocaleString():"N/A"}</td>\n                            <td>${t.address||"N/A"}</td>\n                            <td>${t.date_added||"N/A"}</td>\n                            <td><a href="${t.edit_url}" class="button button-small">Edit</a></td>\n                        </tr>\n                    `}),s+="</tbody></table></div>"):s='\n                    <div class="hph-empty-state">\n                        <span class="dashicons dashicons-admin-home"></span>\n                        <h3>No listings found</h3>\n                        <p>No listings match your current filters.</p>\n                    </div>\n                ',t("#hph-listings-overview").html(s)},renderIntegrationStatus:function(e){let s="";Object.keys(e).forEach(t=>{const n=e[t],i=n.status?.status||"warning",a=n.status?.message||"Unknown";s+=`\n                    <div class="hph-integration-card" data-integration="${t}">\n                        <div class="integration-header">\n                            <h3>${n.name}</h3>\n                            <span class="integration-status status-${i}">${a}</span>\n                        </div>\n                        <div class="integration-meta">\n                            <div class="last-sync">Last sync: ${n.last_sync}</div>\n                        </div>\n                        <div class="integration-actions">\n                            <button class="button button-secondary test-integration" data-integration="${t}">\n                                Test Connection\n                            </button>\n                            <a href="${n.config_url}" class="button button-primary">Configure</a>\n                        </div>\n                    </div>\n                `}),t("#hph-integration-status").html(s),t(".test-integration").click(function(){const e=t(this).data("integration");hphAdmin.testIntegration(e)})},updateIntegrationStatus:function(e,s){const n=t('[data-integration="'+e+'"]'),i=s.status||"warning",a=s.message||"Unknown";n.find(".integration-status").removeClass("status-good status-warning status-error").addClass("status-"+i).text(a)},renderSystemMetrics:function(e){let s='<div class="hph-metrics-grid">';Object.keys(e).forEach(t=>{const n=e[t];s+=`\n                    <div class="hph-metric-card">\n                        <h3>${t.replace("_"," ").toUpperCase()}</h3>\n                        <div class="metric-details">\n                `,"object"==typeof n?Object.keys(n).forEach(t=>{s+=`<div class="metric-item">\n                            <span class="label">${t.replace("_"," ")}:</span>\n                            <span class="value">${n[t]}</span>\n                        </div>`}):s+=`<div class="metric-value">${n}</div>`,s+="</div></div>"}),s+="</div>",t("#hph-system-metrics").html(s)},showNotice:function(e,s="info"){const n=t(`\n                <div class="notice notice-${s} is-dismissible">\n                    <p>${e}</p>\n                    <button type="button" class="notice-dismiss">\n                        <span class="screen-reader-text">Dismiss this notice.</span>\n                    </button>\n                </div>\n            `);t(".wrap h1").after(n),setTimeout(()=>{n.fadeOut(()=>n.remove())},5e3),n.find(".notice-dismiss").click(function(){n.fadeOut(()=>n.remove())})},showLoading:function(e="Loading..."){t(".hph-loading").remove();const s=t(`\n                <div class="hph-loading" style="\n                    position: fixed;\n                    top: 50%;\n                    left: 50%;\n                    transform: translate(-50%, -50%);\n                    background: rgba(255, 255, 255, 0.95);\n                    padding: 20px;\n                    border-radius: 5px;\n                    box-shadow: 0 2px 10px rgba(0,0,0,0.1);\n                    z-index: 9999;\n                    display: flex;\n                    align-items: center;\n                    gap: 10px;\n                ">\n                    <div style="\n                        width: 20px;\n                        height: 20px;\n                        border: 2px solid #ccc;\n                        border-top-color: #007cba;\n                        border-radius: 50%;\n                        animation: spin 1s linear infinite;\n                    "></div>\n                    <span>${e}</span>\n                </div>\n            `);t("body").append(s),t("#hph-loading-styles").length||t("head").append('\n                    <style id="hph-loading-styles">\n                        @keyframes spin {\n                            0% { transform: rotate(0deg); }\n                            100% { transform: rotate(360deg); }\n                        }\n                    </style>\n                ')},hideLoading:function(){t(".hph-loading").fadeOut(300,function(){t(this).remove()})},init:function(){console.log("Happy Place Enhanced Admin initialized"),t(document).on("click","#select-all-listings",function(){t('input[name="listing_ids[]"]').prop("checked",this.checked)});const e=hphEnhancedAdmin.currentPage;e.includes("happy-place-dashboard")&&this.loadDashboardStats(),e.includes("happy-place-system-health")&&this.loadSystemMetrics()}},t(document).ready(function(){"undefined"!=typeof hphEnhancedAdmin&&hphAdmin.init()})}(jQuery)},991:function(){!function(t){"use strict";window.HappyPlaceAdmin={config:{ajaxTimeout:3e4,maxRetries:3,retryDelay:1e3,debounceDelay:300},state:{currentPage:"",isLoading:!1,activeRequests:new Map,cache:new Map},init:function(){this.detectCurrentPage(),this.initializeComponents(),this.bindEvents(),this.loadInitialData(),console.log("HappyPlace Admin initialized")},detectCurrentPage:function(){const t=new URLSearchParams(window.location.search);this.state.currentPage=t.get("page")||"dashboard"},initializeComponents:function(){this.initSettingsManager(),this.initSyncManager(),this.initDashboard(),this.initCSVManager(),this.initSystemValidator(),this.initRealTimeFeatures()},bindEvents:function(){this.bindFormEvents(),this.bindButtonEvents(),this.bindTabEvents(),this.bindSearchEvents(),this.bindUploadEvents()},makeAjaxRequest:function(e,s,n){n=t.extend({timeout:this.config.ajaxTimeout,maxRetries:this.config.maxRetries,retryDelay:this.config.retryDelay,cache:!1,showLoader:!0},n);const i=e+"_"+JSON.stringify(s);if(n.cache&&this.state.cache.has(i))return Promise.resolve(this.state.cache.get(i));const a=this.generateRequestId();n.showLoader&&this.showLoader();const o=o=>new Promise((o,r)=>{const c={url:ajaxurl,type:"POST",data:{action:e,nonce:hph_admin_vars?.nonce||"",...s},timeout:n.timeout,success:t=>{if(t.success)n.cache&&this.state.cache.set(i,t),o(t);else{const e=new Error(t.data?.message||"Request failed");e.response=t,r(e)}},error:(t,e,s)=>{const n=new Error(`AJAX Error: ${e} - ${s}`);n.xhr=t,n.status=e,r(n)}};this.state.activeRequests.set(a,t.ajax(c))}),r=async(t=1)=>{try{return await o()}catch(e){if(t<n.maxRetries&&this.shouldRetry(e))return console.warn(`Request failed, retrying... (${t}/${n.maxRetries})`),await this.delay(n.retryDelay*t),r(t+1);throw e}};return r().finally(()=>{this.state.activeRequests.delete(a),n.showLoader&&this.hideLoader()})},initSettingsManager:function(){this.settings={bindFormSubmission:()=>{t(".happy-place-settings-form").on("submit",e=>{e.preventDefault(),this.saveSettings(t(e.target))})},saveSettings:t=>{const e=new FormData(t[0]),s={};for(let[t,n]of e.entries())s[t]=n;return this.makeAjaxRequest("hph_save_settings",{settings:s}).then(t=>(this.showNotification("Settings saved successfully!","success"),t)).catch(t=>{throw this.showNotification("Failed to save settings: "+t.message,"error"),t})},resetSettings:()=>{if(confirm("Are you sure you want to reset all settings to defaults?"))return this.makeAjaxRequest("hph_reset_settings",{}).then(t=>{this.showNotification("Settings reset to defaults","success"),location.reload()}).catch(t=>{this.showNotification("Failed to reset settings: "+t.message,"error")})},exportSettings:()=>this.makeAjaxRequest("hph_export_settings",{}).then(t=>{const e=new Blob([t.data.data],{type:"application/json"}),s=window.URL.createObjectURL(e),n=document.createElement("a");n.href=s,n.download=t.data.filename,n.click(),window.URL.revokeObjectURL(s),this.showNotification("Settings exported successfully","success")}).catch(t=>{this.showNotification("Failed to export settings: "+t.message,"error")}),importSettings:t=>new Promise((e,s)=>{const n=new FileReader;n.onload=t=>{try{const n=t.target.result;this.makeAjaxRequest("hph_import_settings",{settings_data:n}).then(t=>{this.showNotification("Settings imported successfully","success"),location.reload(),e(t)}).catch(s)}catch(t){s(new Error("Invalid settings file"))}},n.readAsText(t)})},this.settings.bindFormSubmission()},initSyncManager:function(){this.sync={triggerManualSync:()=>{const e=t("#happy-place-manual-sync"),s=t("#sync-status");return e.prop("disabled",!0),s.html('<div class="notice notice-info"><p>Synchronization in progress...</p></div>'),this.makeAjaxRequest("hph_manual_sync",{}).then(t=>{s.html(`<div class="notice notice-success"><p>${t.data.message}</p></div>`),this.updateSyncStatus(t.data)}).catch(t=>{s.html(`<div class="notice notice-error"><p>Sync failed: ${t.message}</p></div>`)}).finally(()=>{e.prop("disabled",!1)})},updateSyncStatus:e=>{const s=t("#last-sync-time");s.length&&s.text(e.timestamp||"Just now")},initAutoSync:()=>{if(hph_admin_vars?.auto_sync_enabled){const t=parseInt(hph_admin_vars.auto_sync_interval)||3e5;setInterval(()=>{this.sync.triggerManualSync()},t)}}},t("#happy-place-manual-sync").on("click",t=>{t.preventDefault(),this.sync.triggerManualSync()}),this.sync.initAutoSync()},initDashboard:function(){this.dashboard={loadWidgets:()=>{["stats","recent_activity","sync_status","system_health"].forEach(t=>{this.dashboard.loadWidget(t)})},loadWidget:e=>{const s=t(`.widget-${e}`);if(s.length)return s.addClass("loading"),this.makeAjaxRequest("hph_load_widget",{widget:e},{cache:!0}).then(t=>{s.find(".widget-content").html(t.data.content)}).catch(t=>{s.find(".widget-content").html(`<p class="error">Failed to load widget: ${t.message}</p>`)}).finally(()=>{s.removeClass("loading")})},refreshDashboard:()=>{this.state.cache.clear(),this.dashboard.loadWidgets()}},"dashboard"!==this.state.currentPage&&"happy-place"!==this.state.currentPage||this.dashboard.loadWidgets()},initCSVManager:function(){this.csv={exportCSV:t=>this.makeAjaxRequest("hph_csv_export",{data_type:t}).then(e=>{e.data.download_url&&window.open(e.data.download_url,"_blank"),this.showNotification(`${t} data exported successfully`,"success")}).catch(e=>{this.showNotification(`Failed to export ${t}: ${e.message}`,"error")}),importCSV:(t,e)=>new Promise((s,n)=>{const i=new FileReader;i.onload=t=>{const i=t.target.result;this.makeAjaxRequest("hph_validate_csv",{csv_data:i,import_type:e}).then(t=>{if(!t.data.validation.valid){const e=t.data.validation.errors.join(", ");throw new Error(`CSV validation failed: ${e}`)}return this.makeAjaxRequest("hph_csv_import",{csv_data:i,import_type:e})}).then(t=>{this.showNotification(`CSV import completed: ${t.data.results.imported} records imported`,"success"),s(t)}).catch(n)},i.readAsText(t)})}},initSystemValidator:function(){this.validator={validateSystem:()=>{const e=t("#system-validation-results");return e.html('<div class="loading">Running system validation...</div>'),this.makeAjaxRequest("hph_validate_system",{}).then(t=>{this.validator.displayResults(t.data.results,t.data.status)}).catch(t=>{e.html(`<div class="error">System validation failed: ${t.message}</div>`)})},displayResults:(e,s)=>{const n=t("#system-validation-results");let i=`<div class="validation-summary status-${s}">\n                        <h3>System Status: ${s.toUpperCase()}</h3>\n                    </div>`;Object.entries(e).forEach(([t,e])=>{i+=`<div class="validation-category">\n                            <h4>${t.charAt(0).toUpperCase()+t.slice(1)}</h4>\n                            <ul>`,Object.entries(e).forEach(([t,e])=>{if("issues"!==t){i+=`<li class="${e?"pass":"fail"}">${e?"✓":"✗"} ${t.replace(/_/g," ")}</li>`}}),e.issues&&e.issues.length>0&&(i+=`<li class="issues">Issues: ${e.issues.join(", ")}</li>`),i+="</ul></div>"}),n.html(i)}}},initRealTimeFeatures:function(){"dashboard"===this.state.currentPage&&setInterval(()=>{this.dashboard.refreshDashboard()},6e4),this.initLiveValidation()},initLiveValidation:function(){t("form input, form textarea").on("blur",this.debounce(e=>{const s=t(e.target),n=s.attr("name"),i=s.val();n&&i&&this.validateField(n,i,s)},this.config.debounceDelay))},validateField:function(t,e,s){return this.makeAjaxRequest("hph_validate_field",{field_name:t,field_value:e},{showLoader:!1}).then(t=>{this.updateFieldValidation(s,t.data.valid,t.data.message)}).catch(t=>{console.warn("Field validation failed:",t)})},updateFieldValidation:function(t,e,s){t.removeClass("valid invalid"),t.next(".validation-message").remove(),e?t.addClass("valid"):(t.addClass("invalid"),s&&t.after(`<span class="validation-message error">${s}</span>`))},bindFormEvents:function(){t(document).on("submit",".happy-place-settings-form",e=>{e.preventDefault(),this.settings.saveSettings(t(e.target))}),t(document).on("change",".csv-upload-input",e=>{const s=e.target.files[0],n=t(e.target).data("import-type");s&&n&&this.csv.importCSV(s,n)})},bindButtonEvents:function(){t(document).on("click","#reset-settings",t=>{t.preventDefault(),this.settings.resetSettings()}),t(document).on("click","#export-settings",t=>{t.preventDefault(),this.settings.exportSettings()}),t(document).on("click","#validate-system",t=>{t.preventDefault(),this.validator.validateSystem()}),t(document).on("click","#refresh-dashboard",t=>{t.preventDefault(),this.dashboard.refreshDashboard()}),t(document).on("click",".csv-export-btn",e=>{e.preventDefault();const s=t(e.target).data("type");this.csv.exportCSV(s)})},bindTabEvents:function(){t(document).on("click",".nav-tab",e=>{e.preventDefault();const s=t(e.target),n=s.attr("href");t(".nav-tab").removeClass("nav-tab-active"),s.addClass("nav-tab-active"),t(".tab-panel").hide(),t(n).show(),this.loadTabContent(n)})},bindSearchEvents:function(){t(document).on("input",".search-input",this.debounce(e=>{const s=t(e.target).val();this.performSearch(s)},this.config.debounceDelay))},bindUploadEvents:function(){t(document).on("dragover",".upload-area",e=>{e.preventDefault(),t(e.target).addClass("dragover")}),t(document).on("dragleave",".upload-area",e=>{e.preventDefault(),t(e.target).removeClass("dragover")}),t(document).on("drop",".upload-area",e=>{e.preventDefault(),t(e.target).removeClass("dragover");const s=e.originalEvent.dataTransfer.files;this.handleFileUpload(s,t(e.target))})},generateRequestId:function(){return"req_"+Date.now()+"_"+Math.random().toString(36).substr(2,9)},shouldRetry:function(t){return 400!==t.status&&403!==t.status&&404!==t.status},delay:function(t){return new Promise(e=>setTimeout(e,t))},debounce:function(t,e){let s;return function(...n){clearTimeout(s),s=setTimeout(()=>{clearTimeout(s),t.apply(this,n)},e)}},showLoader:function(){this.state.isLoading=!0,t(".hph-loader").addClass("active")},hideLoader:function(){this.state.isLoading=!1,t(".hph-loader").removeClass("active")},showNotification:function(e,s="info"){const n=t(`\n                <div class="notice notice-${s} is-dismissible">\n                    <p>${e}</p>\n                    <button type="button" class="notice-dismiss">\n                        <span class="screen-reader-text">Dismiss this notice.</span>\n                    </button>\n                </div>\n            `);t(".notices-container").append(n),setTimeout(()=>{n.fadeOut(()=>n.remove())},5e3)},loadInitialData:function(){"dashboard"===this.state.currentPage&&this.dashboard.loadWidgets()},loadTabContent:function(e){const s=t(e);if(s.hasClass("lazy-load")&&!s.hasClass("loaded")){const t=s.data("content-type");t&&this.makeAjaxRequest("hph_load_tab_content",{content_type:t}).then(t=>{s.html(t.data.content),s.addClass("loaded")})}},performSearch:function(e){if(e.length<3)return;const s=t(".search-results");return s.html('<div class="loading">Searching...</div>'),this.makeAjaxRequest("hph_search",{query:e}).then(t=>{this.displaySearchResults(t.data.results)}).catch(t=>{s.html(`<div class="error">Search failed: ${t.message}</div>`)})},displaySearchResults:function(e){const s=t(".search-results");if(0===e.length)return void s.html('<div class="no-results">No results found</div>');let n='<ul class="search-results-list">';e.forEach(t=>{n+=`<li><a href="${t.url}">${t.title}</a></li>`}),n+="</ul>",s.html(n)},handleFileUpload:function(t,e){const s=e.data("upload-type");Array.from(t).forEach(t=>{this.uploadFile(t,s)})},uploadFile:function(e,s){const n=new FormData;return n.append("file",e),n.append("upload_type",s),n.append("action","hph_upload_file"),n.append("nonce",hph_admin_vars?.nonce||""),t.ajax({url:ajaxurl,type:"POST",data:n,processData:!1,contentType:!1,success:t=>{t.success?this.showNotification("File uploaded successfully","success"):this.showNotification("Upload failed: "+t.data.message,"error")},error:()=>{this.showNotification("Upload failed: Network error","error")}})}},t(document).ready(function(){"undefined"!=typeof hph_admin_vars?HappyPlaceAdmin.init():console.warn("HPH Admin variables not loaded")})}(jQuery)}},e={};function s(n){var i=e[n];if(void 0!==i)return i.exports;var a=e[n]={id:n,loaded:!1,exports:{}};return t[n](a,a.exports,s),a.loaded=!0,a.exports}s.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return s.d(e,{a:e}),e},s.d=function(t,e){for(var n in e)s.o(e,n)&&!s.o(t,n)&&Object.defineProperty(t,n,{enumerable:!0,get:e[n]})},s.hmd=function(t){return(t=Object.create(t)).children||(t.children=[]),Object.defineProperty(t,"exports",{enumerable:!0,set:function(){throw new Error("ES Modules may not assign module.exports or exports.*, Use ESM export syntax, instead: "+t.id)}}),t},s.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)};s(603)}();