!function(){var t={161:function(){window.BaseIntegration=class{constructor(t={}){this.config={apiUrl:"",apiKey:"",apiSecret:"",timeout:3e4,retryAttempts:3,retryDelay:1e3,rateLimitRequests:100,rateLimitWindow:6e4,cacheEnabled:!0,cacheTTL:3e5,debug:!1,...t},this.authenticated=!1,this.lastAuthTime=null,this.authToken=null,this.requestCounts=new Map,this.cache=new Map,this.webhookHandlers=new Map,this.eventTarget=new EventTarget,this.init()}async init(){try{await this.authenticate(),this.setupRateLimiting(),this.setupCache(),this.setupWebhooks(),this.log("Integration initialized successfully"),this.emit("initialized",{integration:this.constructor.name})}catch(t){this.log(`Integration initialization failed: ${t.message}`,"error"),this.emit("error",{type:"initialization",error:t})}}async authenticate(){this.authenticated=!0,this.lastAuthTime=Date.now()}isAuthenticationValid(){return!(!this.authenticated||!this.lastAuthTime)&&Date.now()-this.lastAuthTime<36e5}async request(t,e={}){const i={method:"GET",headers:{},data:null,cache:this.config.cacheEnabled,...e};if(this.isAuthenticationValid()||await this.authenticate(),!this.checkRateLimit())throw new Error("Rate limit exceeded");const s=this.generateCacheKey(t,i);if(i.cache&&"GET"===i.method){const e=this.getFromCache(s);if(e)return this.log(`Cache hit for ${t}`),e}let n;for(let e=0;e<=this.config.retryAttempts;e++)try{const n=await this.makeHttpRequest(t,i);return i.cache&&"GET"===i.method&&this.setCache(s,n),this.emit("request:success",{endpoint:t,method:i.method,attempt:e}),n}catch(t){if(n=t,t.status>=400&&t.status<500&&429!==t.status)break;if(401===t.status||403===t.status){this.authenticated=!1;break}e<this.config.retryAttempts&&await this.delay(this.config.retryDelay*Math.pow(2,e))}throw this.emit("request:error",{endpoint:t,method:i.method,error:n}),n}async makeHttpRequest(t,e){const i=this.buildUrl(t),s=this.buildHeaders(e.headers),n=new AbortController,a=setTimeout(()=>n.abort(),this.config.timeout);try{const t={method:e.method,headers:s,signal:n.signal};e.data&&"GET"!==e.method&&(e.data instanceof FormData?t.body=e.data:(t.body=JSON.stringify(e.data),s["Content-Type"]="application/json")),this.log(`Making ${e.method} request to ${i}`);const o=await fetch(i,t);if(clearTimeout(a),this.updateRateLimit(),!o.ok){const t=new Error(`HTTP ${o.status}: ${o.statusText}`);throw t.status=o.status,t.response=o,t}return await o.json()}catch(t){if(clearTimeout(a),"AbortError"===t.name)throw new Error("Request timeout");throw t}}buildUrl(t){return`${this.config.apiUrl.replace(/\/$/,"")}/${t.replace(/^\//,"")}`}buildHeaders(t={}){const e={"User-Agent":"HappyPlace-WordPress-Theme/3.0.0",Accept:"application/json",...t};return this.authToken?e.Authorization=`Bearer ${this.authToken}`:this.config.apiKey&&(e["X-API-Key"]=this.config.apiKey),e}setupRateLimiting(){setInterval(()=>{this.cleanupRateLimiting()},this.config.rateLimitWindow)}checkRateLimit(){const t=Date.now()-this.config.rateLimitWindow;let e=0;for(const[i,s]of this.requestCounts.entries())i>t&&(e+=s);return e<this.config.rateLimitRequests}updateRateLimit(){const t=Date.now(),e=6e4*Math.floor(t/6e4);this.requestCounts.set(e,(this.requestCounts.get(e)||0)+1)}cleanupRateLimiting(){const t=Date.now()-this.config.rateLimitWindow;for(const e of this.requestCounts.keys())e<t&&this.requestCounts.delete(e)}setupCache(){setInterval(()=>{this.cleanupCache()},6e4)}generateCacheKey(t,e){const i=`${t}_${JSON.stringify(e.data||{})}_${e.method}`;return btoa(i).replace(/[=+/]/g,"")}getFromCache(t){const e=this.cache.get(t);return e&&e.expires>Date.now()?e.data:(e&&this.cache.delete(t),null)}setCache(t,e,i=this.config.cacheTTL){if(this.cache.size>=100){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,{data:e,expires:Date.now()+i,created:Date.now()})}clearCache(t=null){if(t){const e=new RegExp(t);for(const t of this.cache.keys())e.test(t)&&this.cache.delete(t)}else this.cache.clear()}cleanupCache(){const t=Date.now();for(const[e,i]of this.cache.entries())i.expires<=t&&this.cache.delete(e)}setupWebhooks(){}registerWebhook(t,e){this.webhookHandlers.has(t)||this.webhookHandlers.set(t,new Set),this.webhookHandlers.get(t).add(e)}handleWebhook(t,e){const i=this.webhookHandlers.get(t);i&&i.forEach(i=>{try{i(e)}catch(e){this.log(`Webhook handler error for ${t}: ${e.message}`,"error")}}),this.emit("webhook",{event:t,data:e})}emit(t,e={}){const i=new CustomEvent(t,{detail:{integration:this.constructor.name,timestamp:(new Date).toISOString(),...e}});this.eventTarget.dispatchEvent(i)}on(t,e){return this.eventTarget.addEventListener(t,e),()=>{this.eventTarget.removeEventListener(t,e)}}delay(t){return new Promise(e=>setTimeout(e,t))}log(t,e="info"){if(this.config.debug||window.hphAjax?.debug){const i=`[${this.constructor.name}]`;console[e](`${i} ${t}`)}}getHealthStatus(){return{name:this.constructor.name,authenticated:this.authenticated,lastAuthTime:this.lastAuthTime,cacheSize:this.cache.size,rateLimitStatus:this.getRateLimitStatus(),config:{apiUrl:this.config.apiUrl,timeout:this.config.timeout,retryAttempts:this.config.retryAttempts,cacheEnabled:this.config.cacheEnabled}}}getRateLimitStatus(){const t=Date.now(),e=t-this.config.rateLimitWindow;let i=0;for(const[t,s]of this.requestCounts.entries())t>e&&(i+=s);return{requestCount:i,maxRequests:this.config.rateLimitRequests,remaining:this.config.rateLimitRequests-i,resetTime:6e4*Math.ceil((t+this.config.rateLimitWindow)/6e4)}}async testConnection(){try{return await this.authenticate(),{success:!0,status:await this.getStatus(),timestamp:(new Date).toISOString()}}catch(t){return{success:!1,error:t.message,timestamp:(new Date).toISOString()}}}async getStatus(){return{status:"connected"}}destroy(){this.clearCache(),this.requestCounts.clear(),this.webhookHandlers.clear(),this.authenticated=!1,this.authToken=null,this.emit("destroyed"),this.log("Integration destroyed")}}},266:function(){window.ComponentRegistry=new class{constructor(){this.components=new Map,this.instances=new WeakMap}register(t,e){this.components.set(t,e)}create(t,e,i={}){const s=this.components.get(t);if(!s)throw new Error(`Component type "${t}" not registered`);const n=new s(e,i);return this.instances.set(e,n),n}getInstance(t){return this.instances.get(t)}initFromDOM(t=document){t.querySelectorAll("[data-component]").forEach(t=>{const e=t.dataset.component,i=t.dataset.componentOptions?JSON.parse(t.dataset.componentOptions):{};this.components.has(e)&&this.create(e,t,i)})}destroyAll(){}},window.DashboardComponent=class{constructor(t,e={}){this.element=t,this.options={autoInit:!0,bindEvents:!0,stateSubscriptions:[],...e},this.state=null,this.subscriptions=[],this.eventListeners=[],this.childComponents=new Map,this.initialized=!1,this.destroyed=!1,this.options.autoInit&&this.init()}init(){this.initialized||this.destroyed||(this.onBeforeInit(),this.state=window.dashboardState||new DashboardState,this.setupStateSubscriptions(),this.options.bindEvents&&this.bindEvents(),this.onInit(),this.initialized=!0,this.onAfterInit(),this.log("Component initialized"))}setupStateSubscriptions(){this.options.stateSubscriptions.forEach(t=>{"string"==typeof t?this.subscribe(t,e=>{this.onStateChange(t,e)}):"object"==typeof t&&this.subscribe(t.path,t.callback.bind(this))})}subscribe(t,e){const i=this.state.subscribe(t,e);return this.subscriptions.push(i),i}addEventListener(t,e,i,s={}){const n=i.bind(this);return t.addEventListener(e,n,s),this.eventListeners.push({element:t,event:e,callback:n,options:s}),n}$(t){return this.element.querySelector(t)}$$(t){return this.element.querySelectorAll(t)}addChild(t,e){this.childComponents.set(t,e),e.parent=this}getChild(t){return this.childComponents.get(t)}removeChild(t){const e=this.childComponents.get(t);e&&(e.destroy(),this.childComponents.delete(t))}show(){this.element.style.display="",this.element.classList.remove("hidden"),this.onShow()}hide(){this.element.style.display="none",this.element.classList.add("hidden"),this.onHide()}toggle(){this.isVisible()?this.hide():this.show()}isVisible(){return"none"!==this.element.style.display&&!this.element.classList.contains("hidden")}update(t){this.onUpdate(t)}refresh(){this.onRefresh()}enable(){this.element.classList.remove("disabled"),this.element.removeAttribute("disabled"),this.onEnable()}disable(){this.element.classList.add("disabled"),this.element.setAttribute("disabled","disabled"),this.onDisable()}isEnabled(){return!this.element.classList.contains("disabled")&&!this.element.hasAttribute("disabled")}trigger(t,e={}){const i=new CustomEvent(t,{detail:{component:this,...e},bubbles:!0,cancelable:!0});return this.element.dispatchEvent(i),i}addClass(t,e=!1){e&&(this.element.style.transition="all 0.3s ease"),this.element.classList.add(t),e&&setTimeout(()=>{this.element.style.transition=""},300)}removeClass(t,e=!1){e&&(this.element.style.transition="all 0.3s ease"),this.element.classList.remove(t),e&&setTimeout(()=>{this.element.style.transition=""},300)}setLoading(t=!0){t?(this.addClass("loading"),this.disable()):(this.removeClass("loading"),this.enable())}showError(t){this.addClass("error");let e=this.$(".component-error");e||(e=document.createElement("div"),e.className="component-error",this.element.appendChild(e)),e.textContent=t,e.style.display="block",this.onError(t)}clearError(){this.removeClass("error");const t=this.$(".component-error");t&&(t.style.display="none"),this.onErrorClear()}log(t,e="info"){if(window.hphAjax?.debug){const i=this.constructor.name;console[e](`[${i}] ${t}`,this)}}destroy(){this.destroyed||(this.onBeforeDestroy(),this.childComponents.forEach(t=>t.destroy()),this.childComponents.clear(),this.subscriptions.forEach(t=>t()),this.subscriptions=[],this.eventListeners.forEach(({element:t,event:e,callback:i,options:s})=>{t.removeEventListener(e,i,s)}),this.eventListeners=[],this.options.removeOnDestroy&&this.element.remove(),this.onDestroy(),this.destroyed=!0,this.log("Component destroyed"))}onBeforeInit(){}onInit(){}onAfterInit(){}onStateChange(t,e){}onUpdate(t){}onRefresh(){}onShow(){}onHide(){}onEnable(){}onDisable(){}onError(t){}onErrorClear(){}onBeforeDestroy(){}onDestroy(){}bindEvents(){}static create(t,e={}){return new this(t,e)}static initAll(t,e={}){const i=document.querySelectorAll(t),s=[];return i.forEach(t=>{const i=new this(t,e);s.push(i)}),s}}},270:function(){class t extends DashboardComponent{constructor(t,e={}){super(t,{stateSubscriptions:["listings"],...e}),this.canvas=null,this.fabricCanvas=null,this.currentTemplate=null,this.currentListing=null,this.templates=[],this.fonts=[],this.isGenerating=!1,this.defaultDimensions={width:816,height:1056},this.ajax=new DashboardAjax}onInit(){this.setupDOM(),this.initializeFabric(),this.loadTemplates(),this.loadFonts()}setupDOM(){this.element.innerHTML='\n            <div class="flyer-generator-layout">\n                \x3c!-- Sidebar Controls --\x3e\n                <div class="flyer-sidebar">\n                    <div class="sidebar-section">\n                        <h3>Select Listing</h3>\n                        <select class="listing-select" id="flyer-listing-select">\n                            <option value="">Choose a listing...</option>\n                        </select>\n                    </div>\n                    \n                    <div class="sidebar-section">\n                        <h3>Templates</h3>\n                        <div class="template-grid" id="template-grid">\n                            <div class="template-loading">Loading templates...</div>\n                        </div>\n                    </div>\n                    \n                    <div class="sidebar-section">\n                        <h3>Customization</h3>\n                        <div class="customization-panel">\n                            \x3c!-- Text Styling --\x3e\n                            <div class="control-group">\n                                <label>Font Family</label>\n                                <select class="font-select" id="font-family">\n                                    <option value="Arial">Arial</option>\n                                    <option value="Helvetica">Helvetica</option>\n                                    <option value="Times New Roman">Times New Roman</option>\n                                    <option value="Georgia">Georgia</option>\n                                </select>\n                            </div>\n                            \n                            <div class="control-group">\n                                <label>Font Size</label>\n                                <input type="range" class="font-size-slider" id="font-size" \n                                       min="8" max="72" value="16">\n                                <span class="font-size-value">16px</span>\n                            </div>\n                            \n                            <div class="control-group">\n                                <label>Text Color</label>\n                                <input type="color" class="color-picker" id="text-color" value="#000000">\n                            </div>\n                            \n                            \x3c!-- Background --\x3e\n                            <div class="control-group">\n                                <label>Background Color</label>\n                                <input type="color" class="color-picker" id="bg-color" value="#ffffff">\n                            </div>\n                            \n                            \x3c!-- Logo Upload --\x3e\n                            <div class="control-group">\n                                <label>Agent Logo</label>\n                                <input type="file" class="logo-upload" id="logo-upload" \n                                       accept="image/*">\n                                <button type="button" class="remove-logo hidden">Remove Logo</button>\n                            </div>\n                            \n                            \x3c!-- Branding --\x3e\n                            <div class="control-group">\n                                <label>Agent Name</label>\n                                <input type="text" class="agent-name" id="agent-name" \n                                       placeholder="Your Name">\n                            </div>\n                            \n                            <div class="control-group">\n                                <label>Agent Phone</label>\n                                <input type="tel" class="agent-phone" id="agent-phone" \n                                       placeholder="(555) 123-4567">\n                            </div>\n                            \n                            <div class="control-group">\n                                <label>Agent Email</label>\n                                <input type="email" class="agent-email" id="agent-email" \n                                       placeholder="agent@example.com">\n                            </div>\n                            \n                            \x3c!-- Layout Options --\x3e\n                            <div class="control-group">\n                                <label>Layout Style</label>\n                                <select class="layout-select" id="layout-style">\n                                    <option value="classic">Classic</option>\n                                    <option value="modern">Modern</option>\n                                    <option value="minimal">Minimal</option>\n                                    <option value="luxury">Luxury</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                    \n                    <div class="sidebar-section">\n                        <h3>Actions</h3>\n                        <div class="action-buttons">\n                            <button type="button" class="btn btn-primary generate-flyer" disabled>\n                                <span class="dashicons dashicons-pdf"></span>\n                                Generate Flyer\n                            </button>\n                            <button type="button" class="btn btn-secondary save-template">\n                                <span class="dashicons dashicons-saved"></span>\n                                Save Template\n                            </button>\n                            <button type="button" class="btn btn-secondary reset-flyer">\n                                <span class="dashicons dashicons-undo"></span>\n                                Reset\n                            </button>\n                        </div>\n                        \n                        \x3c!-- Batch Generation --\x3e\n                        <div class="batch-generation">\n                            <h4>Batch Generate</h4>\n                            <button type="button" class="btn btn-outline batch-generate" \n                                    title="Generate flyers for all selected listings">\n                                <span class="dashicons dashicons-admin-page"></span>\n                                Generate All\n                            </button>\n                        </div>\n                    </div>\n                </div>\n                \n                \x3c!-- Main Canvas Area --\x3e\n                <div class="flyer-canvas-area">\n                    <div class="canvas-toolbar">\n                        <div class="toolbar-group">\n                            <button type="button" class="tool-btn" data-tool="select" title="Select">\n                                <span class="dashicons dashicons-move"></span>\n                            </button>\n                            <button type="button" class="tool-btn" data-tool="text" title="Add Text">\n                                <span class="dashicons dashicons-editor-textcolor"></span>\n                            </button>\n                            <button type="button" class="tool-btn" data-tool="image" title="Add Image">\n                                <span class="dashicons dashicons-format-image"></span>\n                            </button>\n                        </div>\n                        \n                        <div class="toolbar-group">\n                            <button type="button" class="tool-btn" data-action="undo" title="Undo">\n                                <span class="dashicons dashicons-undo"></span>\n                            </button>\n                            <button type="button" class="tool-btn" data-action="redo" title="Redo">\n                                <span class="dashicons dashicons-redo"></span>\n                            </button>\n                        </div>\n                        \n                        <div class="toolbar-group">\n                            <button type="button" class="tool-btn" data-action="zoom-in" title="Zoom In">\n                                <span class="dashicons dashicons-plus-alt"></span>\n                            </button>\n                            <button type="button" class="tool-btn" data-action="zoom-out" title="Zoom Out">\n                                <span class="dashicons dashicons-minus"></span>\n                            </button>\n                            <button type="button" class="tool-btn" data-action="zoom-fit" title="Fit to Screen">\n                                <span class="dashicons dashicons-editor-expand"></span>\n                            </button>\n                        </div>\n                    </div>\n                    \n                    <div class="canvas-container">\n                        <canvas id="flyer-canvas"></canvas>\n                    </div>\n                    \n                    \x3c!-- Loading Overlay --\x3e\n                    <div class="canvas-loading hidden">\n                        <div class="loading-spinner"></div>\n                        <p>Generating flyer...</p>\n                    </div>\n                </div>\n            </div>\n            \n            \x3c!-- Template Modal --\x3e\n            <div class="template-modal hidden">\n                <div class="modal-content">\n                    <div class="modal-header">\n                        <h3>Save Template</h3>\n                        <button type="button" class="modal-close">×</button>\n                    </div>\n                    <div class="modal-body">\n                        <div class="form-group">\n                            <label for="template-name">Template Name</label>\n                            <input type="text" id="template-name" placeholder="Enter template name">\n                        </div>\n                        <div class="form-group">\n                            <label for="template-description">Description</label>\n                            <textarea id="template-description" rows="3" \n                                      placeholder="Brief description of this template"></textarea>\n                        </div>\n                        <div class="form-group">\n                            <label>\n                                <input type="checkbox" id="template-public"> \n                                Make this template public\n                            </label>\n                        </div>\n                    </div>\n                    <div class="modal-footer">\n                        <button type="button" class="btn btn-secondary modal-cancel">Cancel</button>\n                        <button type="button" class="btn btn-primary template-save-confirm">Save Template</button>\n                    </div>\n                </div>\n            </div>\n        '}initializeFabric(){this.canvas=this.$("#flyer-canvas"),this.canvas&&(this.fabricCanvas=new fabric.Canvas("flyer-canvas",{width:this.defaultDimensions.width,height:this.defaultDimensions.height,backgroundColor:"#ffffff"}),this.setupCanvasEvents(),this.zoomToFit())}setupCanvasEvents(){this.fabricCanvas.on("selection:created",t=>{this.updatePropertyPanel(t.selected[0])}),this.fabricCanvas.on("selection:updated",t=>{this.updatePropertyPanel(t.selected[0])}),this.fabricCanvas.on("selection:cleared",()=>{this.clearPropertyPanel()}),this.fabricCanvas.on("object:modified",()=>{this.saveState()}),this.fabricCanvas.on("mouse:down",t=>{this.handleCanvasMouseDown(t)})}bindEvents(){const t=this.$("#flyer-listing-select");t&&this.addEventListener(t,"change",this.handleListingChange),this.addEventListener(this.element,"click",this.handleTemplateClick),this.$$(".customization-panel input, .customization-panel select").forEach(t=>{this.addEventListener(t,"change",this.handleControlChange),this.addEventListener(t,"input",this.handleControlChange)});const e=this.$(".generate-flyer");e&&this.addEventListener(e,"click",this.generateFlyer);const i=this.$(".save-template");i&&this.addEventListener(i,"click",this.showSaveTemplateModal);const s=this.$(".reset-flyer");s&&this.addEventListener(s,"click",this.resetFlyer);const n=this.$(".batch-generate");n&&this.addEventListener(n,"click",this.batchGenerate),this.$$(".tool-btn").forEach(t=>{this.addEventListener(t,"click",this.handleToolClick)});const a=this.$("#logo-upload");a&&this.addEventListener(a,"change",this.handleLogoUpload),this.addEventListener(this.element,"click",this.handleModalClick)}async loadTemplates(){try{const t=await this.ajax.request("get_flyer_templates");t.success&&(this.templates=t.data.templates,this.renderTemplateGrid())}catch(t){console.error("Failed to load templates:",t),this.showError("Failed to load templates")}}async loadFonts(){try{const t=await this.ajax.request("get_available_fonts");t.success&&(this.fonts=t.data.fonts,this.updateFontSelect())}catch(t){console.error("Failed to load fonts:",t)}}renderTemplateGrid(){const t=this.$("#template-grid");t&&(0!==this.templates.length?t.innerHTML=this.templates.map(t=>`\n            <div class="template-item" data-template-id="${t.id}">\n                <div class="template-preview">\n                    <img src="${t.thumbnail}" alt="${t.name}" loading="lazy">\n                </div>\n                <div class="template-info">\n                    <h4>${t.name}</h4>\n                    <p>${t.description||""}</p>\n                </div>\n                <div class="template-actions">\n                    <button type="button" class="btn btn-small use-template">Use Template</button>\n                </div>\n            </div>\n        `).join(""):t.innerHTML='<p class="no-templates">No templates available</p>')}updateFontSelect(){const t=this.$("#font-family");t&&(t.innerHTML="",this.fonts.forEach(e=>{const i=document.createElement("option");i.value=e.family,i.textContent=e.name,t.appendChild(i)}))}handleListingChange(t){const e=t.target.value;if(e){const t=this.state.getListing(parseInt(e));t&&this.setCurrentListing(t)}else this.currentListing=null,this.updateGenerateButton()}setCurrentListing(t){this.currentListing=t,this.updateListingData(),this.updateGenerateButton()}updateListingData(){this.currentListing&&this.fabricCanvas&&(this.fabricCanvas.getObjects().forEach(t=>{if("text"===t.type||"textbox"===t.type){const e=t.text,i=this.replacePlaceholders(e,this.currentListing);i!==e&&t.set("text",i)}}),this.fabricCanvas.renderAll())}replacePlaceholders(t,e){const i={"{{address}}":e.address||"","{{price}}":e.price?`$${parseInt(e.price).toLocaleString()}`:"","{{bedrooms}}":e.bedrooms||"","{{bathrooms}}":e.bathrooms||"","{{sqft}}":e.sqft?`${parseInt(e.sqft).toLocaleString()} sq ft`:"","{{description}}":e.description||"","{{city}}":e.city||"","{{state}}":e.state||"","{{zip}}":e.zip||"","{{property_type}}":e.property_type||"","{{mls_number}}":e.mls_number||"","{{agent_name}}":this.$("#agent-name")?.value||"","{{agent_phone}}":this.$("#agent-phone")?.value||"","{{agent_email}}":this.$("#agent-email")?.value||""};let s=t;return Object.entries(i).forEach(([t,e])=>{s=s.replace(new RegExp(t,"g"),e)}),s}handleTemplateClick(t){const e=t.target.closest(".template-item");if(e){const t=e.dataset.templateId;this.loadTemplate(t)}}async loadTemplate(t){try{this.setLoading(!0);const e=await this.ajax.request("get_flyer_template",{id:t});e.success&&(this.currentTemplate=e.data.template,await this.applyTemplate(this.currentTemplate))}catch(t){console.error("Failed to load template:",t),this.showError("Failed to load template")}finally{this.setLoading(!1)}}async applyTemplate(t){this.fabricCanvas&&(this.fabricCanvas.clear(),t.width&&t.height&&this.fabricCanvas.setDimensions({width:t.width,height:t.height}),t.backgroundColor&&(this.fabricCanvas.backgroundColor=t.backgroundColor),t.objects&&await this.loadCanvasFromJSON(t.objects),this.currentListing&&this.updateListingData(),this.fabricCanvas.renderAll(),this.zoomToFit())}async loadCanvasFromJSON(t){return new Promise(e=>{this.fabricCanvas.loadFromJSON(t,()=>{e()})})}handleControlChange(t){const e=t.target;switch(e.id){case"font-family":this.updateSelectedTextFont(e.value);break;case"font-size":this.updateSelectedTextSize(parseInt(e.value)),this.updateFontSizeDisplay(e.value);break;case"text-color":this.updateSelectedTextColor(e.value);break;case"bg-color":this.updateCanvasBackground(e.value);break;case"agent-name":case"agent-phone":case"agent-email":this.updateListingData()}}updateSelectedTextFont(t){const e=this.fabricCanvas.getActiveObject();!e||"text"!==e.type&&"textbox"!==e.type||(e.set("fontFamily",t),this.fabricCanvas.renderAll())}updateSelectedTextSize(t){const e=this.fabricCanvas.getActiveObject();!e||"text"!==e.type&&"textbox"!==e.type||(e.set("fontSize",t),this.fabricCanvas.renderAll())}updateSelectedTextColor(t){const e=this.fabricCanvas.getActiveObject();!e||"text"!==e.type&&"textbox"!==e.type||(e.set("fill",t),this.fabricCanvas.renderAll())}updateCanvasBackground(t){this.fabricCanvas.backgroundColor=t,this.fabricCanvas.renderAll()}updateFontSizeDisplay(t){const e=this.$(".font-size-value");e&&(e.textContent=`${t}px`)}handleLogoUpload(t){const e=t.target.files[0];if(!e)return;const i=new FileReader;i.onload=t=>{this.addLogoToCanvas(t.target.result)},i.readAsDataURL(e)}addLogoToCanvas(t){fabric.Image.fromURL(t,t=>{let e=1;t.width>200&&(e=200/t.width),t.height*e>100&&(e=100/t.height),t.scale(e),t.set({left:50,top:50,selectable:!0}),this.fabricCanvas.add(t),this.fabricCanvas.setActiveObject(t),this.fabricCanvas.renderAll()})}handleToolClick(t){const e=t.target.closest(".tool-btn");if(!e)return;const i=e.dataset.tool,s=e.dataset.action;i?this.setActiveTool(i):s&&this.executeAction(s)}setActiveTool(t){switch(this.$$(".tool-btn[data-tool]").forEach(t=>{t.classList.remove("active")}),this.$(`[data-tool="${t}"]`)?.classList.add("active"),t){case"select":this.fabricCanvas.selection=!0,this.fabricCanvas.defaultCursor="default";break;case"text":this.fabricCanvas.selection=!1,this.fabricCanvas.defaultCursor="text";break;case"image":this.fabricCanvas.selection=!1,this.fabricCanvas.defaultCursor="crosshair"}}executeAction(t){switch(t){case"undo":case"redo":break;case"zoom-in":this.zoomIn();break;case"zoom-out":this.zoomOut();break;case"zoom-fit":this.zoomToFit()}}zoomIn(){const t=this.fabricCanvas.getZoom();this.fabricCanvas.setZoom(Math.min(1.2*t,3))}zoomOut(){const t=this.fabricCanvas.getZoom();this.fabricCanvas.setZoom(Math.max(t/1.2,.1))}zoomToFit(){const t=this.$(".canvas-container");if(!t)return;const e=t.clientWidth-40,i=t.clientHeight-40,s=this.fabricCanvas.width,n=this.fabricCanvas.height,a=Math.min(e/s,i/n);this.fabricCanvas.setZoom(a),this.fabricCanvas.centerObject=!0}async generateFlyer(){if(this.currentListing&&!this.isGenerating)try{this.isGenerating=!0,this.setLoading(!0);const t=this.fabricCanvas.toJSON(["selectable","evented"]),e=this.fabricCanvas.toDataURL({format:"png",quality:1,multiplier:2}),i=await this.ajax.generateFlyer(this.currentListing.id,{template:this.currentTemplate,canvasData:t,canvasImage:e,customization:this.getCustomizationData()});i.success&&this.handleFlyerGenerated(i.data)}catch(t){console.error("Failed to generate flyer:",t),this.showError("Failed to generate flyer")}finally{this.isGenerating=!1,this.setLoading(!1)}}handleFlyerGenerated(t){const e=document.createElement("a");e.href=t.download_url,e.download=t.filename,e.click(),this.state.addNotification({type:"success",message:"Flyer generated successfully!",action:{label:"Download Again",callback:()=>{window.open(t.download_url,"_blank")}}})}getCustomizationData(){return{agentName:this.$("#agent-name")?.value||"",agentPhone:this.$("#agent-phone")?.value||"",agentEmail:this.$("#agent-email")?.value||"",layoutStyle:this.$("#layout-style")?.value||"classic"}}async batchGenerate(){const t=this.state.getFilteredListings();if(0!==t.length){if(confirm(`Generate flyers for ${t.length} listings?`))try{this.setLoading(!0);const e=[];for(let i=0;i<t.length;i+=3){const s=t.slice(i,i+3).map(t=>this.generateFlyerForListing(t)),n=await Promise.allSettled(s);e.push(...n),await new Promise(t=>setTimeout(t,1e3))}this.handleBatchResults(e)}catch(t){console.error("Batch generation failed:",t),this.showError("Batch generation failed")}finally{this.setLoading(!1)}}else this.showError("No listings to generate flyers for")}async generateFlyerForListing(t){const e=this.fabricCanvas.toJSON(["selectable","evented"]);return this.ajax.generateFlyer(t.id,{template:this.currentTemplate,canvasData:e,customization:this.getCustomizationData()})}handleBatchResults(t){const e=t.filter(t=>"fulfilled"===t.status).length,i=t.filter(t=>"rejected"===t.status).length;this.state.addNotification({type:e>0?"success":"error",message:`Batch generation complete: ${e} successful, ${i} failed`,persistent:!0})}updateGenerateButton(){const t=this.$(".generate-flyer");t&&(t.disabled=!this.currentListing||this.isGenerating)}onStateChange(t,e){"listings"===t&&this.updateListingsDropdown()}updateListingsDropdown(){const t=this.$("#flyer-listing-select");if(!t)return;const e=this.state.getListings();t.innerHTML='<option value="">Choose a listing...</option>',e.forEach(e=>{const i=document.createElement("option");i.value=e.id,i.textContent=`${e.address} - $${parseInt(e.price||0).toLocaleString()}`,t.appendChild(i)})}showSaveTemplateModal(){const t=this.$(".template-modal");t&&t.classList.remove("hidden")}handleModalClick(t){const e=t.target.closest(".template-modal");e&&((t.target.classList.contains("modal-close")||t.target.classList.contains("modal-cancel"))&&e.classList.add("hidden"),t.target.classList.contains("template-save-confirm")&&this.saveTemplate())}async saveTemplate(){const t=this.$("#template-name")?.value,e=this.$("#template-description")?.value,i=this.$("#template-public")?.checked;if(t)try{const s=this.fabricCanvas.toJSON(["selectable","evented"]),n=this.fabricCanvas.toDataURL({format:"jpeg",quality:.8,multiplier:.3}),a=await this.ajax.request("save_flyer_template",{name:t,description:e,isPublic:i,canvasData:s,thumbnail:n,width:this.fabricCanvas.width,height:this.fabricCanvas.height});a.success&&(this.templates.push(a.data.template),this.renderTemplateGrid(),this.$(".template-modal")?.classList.add("hidden"),this.state.addNotification({type:"success",message:"Template saved successfully!"}))}catch(t){console.error("Failed to save template:",t),this.showError("Failed to save template")}else this.showError("Template name is required")}resetFlyer(){confirm("Reset flyer? This will clear all changes.")&&(this.fabricCanvas.clear(),this.fabricCanvas.backgroundColor="#ffffff",this.fabricCanvas.renderAll(),this.currentTemplate=null,this.currentListing=null,this.$("#flyer-listing-select").value="",this.updateGenerateButton())}saveState(){}updatePropertyPanel(t){t&&("text"!==t.type&&"textbox"!==t.type||(this.$("#font-family").value=t.fontFamily||"Arial",this.$("#font-size").value=t.fontSize||16,this.$("#text-color").value=t.fill||"#000000",this.updateFontSizeDisplay(t.fontSize||16)))}clearPropertyPanel(){}handleCanvasMouseDown(t){const e=this.$(".tool-btn.active")?.dataset.tool;"text"===e&&this.addTextAtPoint(t.pointer)}addTextAtPoint(t){const e=new fabric.Textbox("Click to edit text",{left:t.x,top:t.y,fontSize:16,fontFamily:"Arial",fill:"#000000",width:200});this.fabricCanvas.add(e),this.fabricCanvas.setActiveObject(e),this.fabricCanvas.renderAll(),e.enterEditing()}}window.ComponentRegistry.register("flyer-generator",t)},291:function(){class t extends DashboardComponent{constructor(t,e={}){super(t,{stateSubscriptions:["listings","ui.filteredListings"],...e}),this.searchTimeout=null,this.searchDelay=300,this.minSearchLength=2,this.maxSuggestions=10,this.savedSearches=JSON.parse(localStorage.getItem("hph_saved_searches")||"[]"),this.recentSearches=JSON.parse(localStorage.getItem("hph_recent_searches")||"[]"),this.currentFilters={},this.currentSearch="",this.ajax=new DashboardAjax}onInit(){this.setupDOM(),this.loadSavedFilters(),this.updateUI()}setupDOM(){this.$(".search-input")||this.createSearchInput(),this.$(".filter-controls")||this.createFilterControls(),this.createSuggestionsDropdown(),this.createSavedSearchesPanel()}createSearchInput(){const t=document.createElement("div");t.className="search-container",t.innerHTML='\n            <div class="search-input-wrapper">\n                <input type="text" class="search-input" placeholder="Search listings..." autocomplete="off">\n                <button type="button" class="search-clear" title="Clear search">\n                    <span class="dashicons dashicons-no-alt"></span>\n                </button>\n                <button type="button" class="search-submit" title="Search">\n                    <span class="dashicons dashicons-search"></span>\n                </button>\n            </div>\n            <div class="search-suggestions"></div>\n        ',this.element.appendChild(t)}createFilterControls(){const t=document.createElement("div");t.className="filter-controls",t.innerHTML='\n            <div class="filter-group">\n                <label for="filter-status">Status:</label>\n                <select id="filter-status" class="filter-select" data-filter="status">\n                    <option value="">All Statuses</option>\n                    <option value="active">Active</option>\n                    <option value="pending">Pending</option>\n                    <option value="sold">Sold</option>\n                    <option value="expired">Expired</option>\n                </select>\n            </div>\n            \n            <div class="filter-group">\n                <label for="filter-type">Property Type:</label>\n                <select id="filter-type" class="filter-select" data-filter="property_type">\n                    <option value="">All Types</option>\n                    <option value="single-family">Single Family</option>\n                    <option value="condo">Condo</option>\n                    <option value="townhouse">Townhouse</option>\n                    <option value="multi-family">Multi-Family</option>\n                    <option value="land">Land</option>\n                    <option value="commercial">Commercial</option>\n                </select>\n            </div>\n            \n            <div class="filter-group">\n                <label for="filter-price-min">Min Price:</label>\n                <input type="number" id="filter-price-min" class="filter-input" \n                       data-filter="price_min" placeholder="$0">\n            </div>\n            \n            <div class="filter-group">\n                <label for="filter-price-max">Max Price:</label>\n                <input type="number" id="filter-price-max" class="filter-input" \n                       data-filter="price_max" placeholder="Any">\n            </div>\n            \n            <div class="filter-group">\n                <label for="filter-bedrooms">Bedrooms:</label>\n                <select id="filter-bedrooms" class="filter-select" data-filter="bedrooms">\n                    <option value="">Any</option>\n                    <option value="1">1+</option>\n                    <option value="2">2+</option>\n                    <option value="3">3+</option>\n                    <option value="4">4+</option>\n                    <option value="5">5+</option>\n                </select>\n            </div>\n            \n            <div class="filter-group">\n                <label for="filter-bathrooms">Bathrooms:</label>\n                <select id="filter-bathrooms" class="filter-select" data-filter="bathrooms">\n                    <option value="">Any</option>\n                    <option value="1">1+</option>\n                    <option value="2">2+</option>\n                    <option value="3">3+</option>\n                    <option value="4">4+</option>\n                </select>\n            </div>\n            \n            <div class="filter-actions">\n                <button type="button" class="filter-clear">Clear Filters</button>\n                <button type="button" class="filter-save">Save Search</button>\n            </div>\n        ',this.element.appendChild(t)}createSuggestionsDropdown(){const t=document.createElement("div");t.className="search-suggestions-dropdown hidden",t.innerHTML='\n            <div class="suggestions-section">\n                <h4>Recent Searches</h4>\n                <ul class="recent-searches"></ul>\n            </div>\n            <div class="suggestions-section">\n                <h4>Suggestions</h4>\n                <ul class="search-suggestions-list"></ul>\n            </div>\n        ',this.element.appendChild(t)}createSavedSearchesPanel(){const t=document.createElement("div");t.className="saved-searches-panel",t.innerHTML='\n            <h4>Saved Searches</h4>\n            <div class="saved-searches-list"></div>\n        ',this.element.appendChild(t),this.updateSavedSearches()}bindEvents(){const t=this.$(".search-input");t&&(this.addEventListener(t,"input",this.handleSearchInput),this.addEventListener(t,"focus",this.showSuggestions),this.addEventListener(t,"keydown",this.handleSearchKeydown));const e=this.$(".search-clear");e&&this.addEventListener(e,"click",this.clearSearch);const i=this.$(".search-submit");i&&this.addEventListener(i,"click",this.submitSearch),this.$$(".filter-select, .filter-input").forEach(t=>{this.addEventListener(t,"change",this.handleFilterChange)});const s=this.$(".filter-clear");s&&this.addEventListener(s,"click",this.clearFilters);const n=this.$(".filter-save");n&&this.addEventListener(n,"click",this.saveCurrentSearch),this.addEventListener(document,"click",this.handleDocumentClick),this.addEventListener(this.element,"click",this.handleSuggestionClick)}handleSearchInput(t){const e=t.target.value;this.currentSearch=e,this.searchTimeout&&clearTimeout(this.searchTimeout),this.searchTimeout=setTimeout(()=>{this.performSearch(e)},this.searchDelay),e.length>=this.minSearchLength?this.updateSuggestions(e):this.hideSuggestions()}handleSearchKeydown(t){"Enter"===t.key?(t.preventDefault(),this.submitSearch()):"Escape"===t.key&&this.hideSuggestions()}handleFilterChange(t){const e=t.target.dataset.filter,i=t.target.value;i?this.currentFilters[e]=i:delete this.currentFilters[e],this.applyFilters()}handleDocumentClick(t){this.element.contains(t.target)||this.hideSuggestions()}handleSuggestionClick(t){const e=t.target.closest("[data-suggestion]");if(e){const t=e.dataset.suggestion;this.applySearchQuery(t),this.hideSuggestions()}const i=t.target.closest("[data-saved-search]");if(i){const t=i.dataset.savedSearch;this.applySavedSearch(t)}const s=t.target.closest(".delete-saved-search");if(s){t.stopPropagation();const e=s.closest("[data-saved-search]").dataset.savedSearch;this.deleteSavedSearch(e)}}async performSearch(t){if(this.state.setSearchQuery(t),this.addToRecentSearches(t),t.length>=this.minSearchLength)try{this.setLoading(!0);const e=await this.ajax.searchListings(t,this.currentFilters);e.success&&this.state.setListings(e.data.listings)}catch(t){this.state.addError(`Search failed: ${t.message}`)}finally{this.setLoading(!1)}}applySearchQuery(t){const e=this.$(".search-input");e&&(e.value=t),this.currentSearch=t,this.performSearch(t)}applyFilters(){this.state.setFilter("combined",this.currentFilters),this.saveCurrentFilters()}clearSearch(){const t=this.$(".search-input");t&&(t.value=""),this.currentSearch="",this.state.setSearchQuery(""),this.hideSuggestions()}clearFilters(){this.$$(".filter-select").forEach(t=>{t.value=""}),this.$$(".filter-input").forEach(t=>{t.value=""}),this.currentFilters={},this.state.clearFilters(),localStorage.removeItem("hph_current_filters")}submitSearch(){const t=this.$(".search-input");t&&this.performSearch(t.value),this.hideSuggestions()}showSuggestions(){const t=this.$(".search-suggestions-dropdown");t&&(t.classList.remove("hidden"),this.updateRecentSearches())}hideSuggestions(){const t=this.$(".search-suggestions-dropdown");t&&t.classList.add("hidden")}async updateSuggestions(t){try{const e=this.state.getListings(),i=this.generateSuggestions(t,e),s=this.$(".search-suggestions-list");s&&(s.innerHTML=i.map(e=>`\n                    <li data-suggestion="${e.text}" class="suggestion-item">\n                        <span class="suggestion-text">${this.highlightMatch(e.text,t)}</span>\n                        <span class="suggestion-type">${e.type}</span>\n                    </li>\n                `).join("")),this.showSuggestions()}catch(t){console.error("Failed to update suggestions:",t)}}generateSuggestions(t,e){const i=[],s=t.toLowerCase();return e.forEach(e=>{e.address&&e.address.toLowerCase().includes(s)&&i.push({text:e.address,type:"address",score:this.calculateRelevanceScore(e.address,t)})}),[...new Set(e.map(t=>t.city).filter(Boolean))].forEach(e=>{e.toLowerCase().includes(s)&&i.push({text:e,type:"city",score:this.calculateRelevanceScore(e,t)})}),[...new Set(e.map(t=>t.property_type).filter(Boolean))].forEach(e=>{e.toLowerCase().includes(s)&&i.push({text:e,type:"property type",score:this.calculateRelevanceScore(e,t)})}),i.sort((t,e)=>e.score-t.score).slice(0,this.maxSuggestions)}calculateRelevanceScore(t,e){const i=t.toLowerCase(),s=e.toLowerCase();return i===s?100:i.startsWith(s)?80:i.includes(s)?60:0}highlightMatch(t,e){const i=new RegExp(`(${e})`,"gi");return t.replace(i,"<mark>$1</mark>")}updateRecentSearches(){const t=this.$(".recent-searches");t&&this.recentSearches.length>0&&(t.innerHTML=this.recentSearches.slice(0,5).map(t=>`\n                <li data-suggestion="${t}" class="recent-search-item">\n                    <span class="recent-search-text">${t}</span>\n                    <span class="recent-search-icon dashicons dashicons-clock"></span>\n                </li>\n            `).join(""))}addToRecentSearches(t){if(!t||t.length<this.minSearchLength)return;const e=this.recentSearches.indexOf(t);e>-1&&this.recentSearches.splice(e,1),this.recentSearches.unshift(t),this.recentSearches=this.recentSearches.slice(0,10),localStorage.setItem("hph_recent_searches",JSON.stringify(this.recentSearches))}saveCurrentSearch(){const t=prompt("Enter a name for this search:");if(!t)return;const e={id:Date.now().toString(),name:t,query:this.currentSearch,filters:{...this.currentFilters},created:(new Date).toISOString()};this.savedSearches.push(e),localStorage.setItem("hph_saved_searches",JSON.stringify(this.savedSearches)),this.updateSavedSearches(),this.state.addNotification({type:"success",message:`Search "${t}" saved successfully`})}applySavedSearch(t){const e=this.savedSearches.find(e=>e.id===t);e&&(e.query&&this.applySearchQuery(e.query),this.currentFilters={...e.filters},this.updateFilterControls(),this.applyFilters())}deleteSavedSearch(t){confirm("Are you sure you want to delete this saved search?")&&(this.savedSearches=this.savedSearches.filter(e=>e.id!==t),localStorage.setItem("hph_saved_searches",JSON.stringify(this.savedSearches)),this.updateSavedSearches())}updateSavedSearches(){const t=this.$(".saved-searches-list");t&&(0!==this.savedSearches.length?t.innerHTML=this.savedSearches.map(t=>`\n            <div class="saved-search-item" data-saved-search="${t.id}">\n                <div class="saved-search-info">\n                    <h5 class="saved-search-name">${t.name}</h5>\n                    <p class="saved-search-details">\n                        ${t.query?`Query: "${t.query}"`:"No query"}\n                        ${Object.keys(t.filters).length>0?` • ${Object.keys(t.filters).length} filters`:""}\n                    </p>\n                    <span class="saved-search-date">${new Date(t.created).toLocaleDateString()}</span>\n                </div>\n                <div class="saved-search-actions">\n                    <button type="button" class="apply-saved-search" title="Apply Search">\n                        <span class="dashicons dashicons-search"></span>\n                    </button>\n                    <button type="button" class="delete-saved-search" title="Delete Search">\n                        <span class="dashicons dashicons-trash"></span>\n                    </button>\n                </div>\n            </div>\n        `).join(""):t.innerHTML='<p class="no-saved-searches">No saved searches yet.</p>')}updateFilterControls(){Object.entries(this.currentFilters).forEach(([t,e])=>{const i=this.$(`[data-filter="${t}"]`);i&&(i.value=e)})}saveCurrentFilters(){localStorage.setItem("hph_current_filters",JSON.stringify(this.currentFilters))}loadSavedFilters(){try{const t=localStorage.getItem("hph_current_filters");t&&(this.currentFilters=JSON.parse(t),this.updateFilterControls(),this.applyFilters())}catch(t){console.warn("Failed to load saved filters:",t)}}onStateChange(t,e){"listings"===t&&this.updateUI()}updateUI(){this.updateFilterCounts()}updateFilterCounts(){const t=this.state.getListings(),e={};t.forEach(t=>{const i=t.status||"unknown";e[i]=(e[i]||0)+1});const i={};t.forEach(t=>{const e=t.property_type||"unknown";i[e]=(i[e]||0)+1})}}window.ComponentRegistry.register("search-filter",t)},442:function(){class t extends BaseIntegration{constructor(t={}){super({apiUrl:t.apiUrl||"https://api.reso.org",rateLimitRequests:10,rateLimitWindow:1e3,cacheTTL:3e5,timeout:3e4,...t}),this.mlsId=t.mlsId||"",this.loginUrl=t.loginUrl||"",this.tokenUrl=t.tokenUrl||"",this.dataUrl=t.dataUrl||"",this.standardVersion=t.standardVersion||"1.7",this.mediaUrl=t.mediaUrl||"",this.clientId=t.clientId||"",this.clientSecret=t.clientSecret||"",this.idxCompliance={disclaimerText:t.disclaimerText||"Listing information courtesy of [MLS_NAME]",logoUrl:t.logoUrl||"",updateFrequency:t.updateFrequency||36e5,listingDetailRequirements:t.listingDetailRequirements||{}},this.fieldMappings={listing:{ListingKey:"mls_id",ListingId:"mls_number",UnparsedAddress:"address",City:"city",StateOrProvince:"state",PostalCode:"zip",CountyOrParish:"county",ListPrice:"price",BedroomsTotal:"bedrooms",BathroomsTotalInteger:"bathrooms",LivingAreaSqFt:"sqft",LotSizeSquareFeet:"lot_size",PropertyType:"property_type",PropertySubType:"property_subtype",StandardStatus:"status",YearBuilt:"year_built",PublicRemarks:"description",ListingContractDate:"listing_date",ModificationTimestamp:"updated_at",PhotosCount:"photos_count",ListAgentKey:"listing_agent_id",ListOfficeName:"listing_office",CoListAgentKey:"co_listing_agent_id",CoListOfficeName:"co_listing_office",Latitude:"latitude",Longitude:"longitude",ElementarySchool:"elementary_school",MiddleOrJuniorSchool:"middle_school",HighSchool:"high_school",Basement:"basement",GarageSpaces:"garage_spaces",WaterSource:"water_source",SewerSource:"sewer_source",PropertyCondition:"condition",ArchitecturalStyle:"architectural_style",FoundationDetails:"foundation",Heating:"heating",Cooling:"cooling",ExteriorFeatures:"exterior_features",InteriorFeatures:"interior_features",FireplaceFeatures:"fireplace_features",SecurityFeatures:"security_features",AssociationFee:"hoa_fee",TaxAmount:"tax_amount",TaxYear:"tax_year"},agent:{MemberKey:"mls_id",MemberMlsId:"mls_number",MemberFirstName:"first_name",MemberLastName:"last_name",MemberFullName:"full_name",MemberEmail:"email",MemberPhoneNumber:"phone",MemberPreferredPhone:"preferred_phone",MemberLicenseNumber:"license_number",OfficeKey:"office_id",OfficeName:"office_name"},office:{OfficeKey:"mls_id",OfficeMlsId:"mls_number",OfficeName:"name",OfficePhone:"phone",OfficeAddress1:"address",OfficeCity:"city",OfficeStateOrProvince:"state",OfficePostalCode:"zip"},media:{MediaKey:"media_id",ResourceRecordKey:"listing_id",MediaURL:"url",MediaType:"type",PreferredPhoto:"is_preferred",MediaCategory:"category",MediaObjectID:"object_id",Order:"sort_order",ShortDescription:"description",LongDescription:"long_description"}},this.statusMappings={Active:"active",Pending:"pending",Sold:"sold",Expired:"expired",Withdrawn:"withdrawn",Cancelled:"cancelled",Hold:"hold",Incomplete:"draft"},this.lastSyncTime=null,this.syncInProgress=!1,this.deltaToken=null,this.accessToken=null,this.refreshToken=null,this.tokenExpiry=null}async init(){await super.init(),this.loadStoredState(),await this.validateCredentials(),this.setupTokenRefresh()}loadStoredState(){const t=localStorage.getItem("mls_integration_state");if(t)try{const e=JSON.parse(t);this.accessToken=e.accessToken,this.refreshToken=e.refreshToken,this.tokenExpiry=e.tokenExpiry?new Date(e.tokenExpiry):null,this.lastSyncTime=e.lastSyncTime?new Date(e.lastSyncTime):null,this.deltaToken=e.deltaToken}catch(t){this.log("Failed to load stored state","error")}}saveState(){const t={accessToken:this.accessToken,refreshToken:this.refreshToken,tokenExpiry:this.tokenExpiry?.toISOString(),lastSyncTime:this.lastSyncTime?.toISOString(),deltaToken:this.deltaToken};localStorage.setItem("mls_integration_state",JSON.stringify(t))}async authenticate(){if(!this.clientId||!this.clientSecret)throw new Error("MLS client ID and secret are required");try{const t=await this.getAccessToken();this.accessToken=t.access_token,this.refreshToken=t.refresh_token,this.tokenExpiry=new Date(Date.now()+1e3*t.expires_in),this.authenticated=!0,this.lastAuthTime=Date.now(),this.saveState(),this.log("MLS authentication successful")}catch(t){throw new Error(`MLS authentication failed: ${t.message}`)}}async getAccessToken(){const t=await fetch(this.tokenUrl,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded",Authorization:`Basic ${btoa(`${this.clientId}:${this.clientSecret}`)}`},body:new URLSearchParams({grant_type:"client_credentials",scope:"ODataApi"})});if(!t.ok)throw new Error(`Token request failed: ${t.status}`);return t.json()}async refreshAccessToken(){if(!this.refreshToken)throw new Error("No refresh token available");try{const t=await fetch(this.tokenUrl,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:new URLSearchParams({grant_type:"refresh_token",refresh_token:this.refreshToken})});if(!t.ok)throw new Error(`Token refresh failed: ${t.status}`);const e=await t.json();this.accessToken=e.access_token,e.refresh_token&&(this.refreshToken=e.refresh_token),this.tokenExpiry=new Date(Date.now()+1e3*e.expires_in),this.saveState(),this.log("Access token refreshed")}catch(t){this.log("Token refresh failed, re-authenticating","error"),await this.authenticate()}}needsTokenRefresh(){if(!this.tokenExpiry)return!0;const t=new Date(Date.now()+3e5);return this.tokenExpiry<=t}setupTokenRefresh(){setInterval(()=>{this.needsTokenRefresh()&&this.refreshAccessToken().catch(t=>{this.log(`Token refresh error: ${t.message}`,"error")})},6e4)}buildHeaders(t={}){const e={Accept:"application/json","User-Agent":"WordPress-TPG-Dashboard/3.0.0",...t};return this.accessToken&&(e.Authorization=`Bearer ${this.accessToken}`),e}async mlsRequest(t,e={}){this.needsTokenRefresh()&&await this.refreshAccessToken();const i=t.startsWith("http")?t:`${this.dataUrl}/${t}`;return this.request(i,{...e,headers:this.buildHeaders(e.headers)})}async getMetadata(){return this.mlsRequest("$metadata",{cache:!0,cacheTTL:864e5})}async queryListings(t={}){const e=new URLSearchParams;t.select&&e.set("$select",Array.isArray(t.select)?t.select.join(","):t.select),t.filter&&e.set("$filter",t.filter),t.orderby&&e.set("$orderby",t.orderby),t.top&&e.set("$top",t.top),t.skip&&e.set("$skip",t.skip),t.expand&&e.set("$expand",t.expand);const i=`Property?${e.toString()}`;return this.mlsRequest(i,{cache:!0,cacheTTL:this.cacheTTL})}async getListing(t){return this.mlsRequest(`Property('${t}')`,{cache:!0,cacheTTL:this.cacheTTL})}async getListingMedia(t){return this.mlsRequest(`Media?$filter=ResourceRecordKey eq '${t}'&$orderby=Order`,{cache:!0,cacheTTL:36e5})}async getAgent(t){return this.mlsRequest(`Member('${t}')`,{cache:!0,cacheTTL:864e5})}async getOffice(t){return this.mlsRequest(`Office('${t}')`,{cache:!0,cacheTTL:864e5})}async getActiveListings(t={}){const e=["StandardStatus eq 'Active'"];if(t.minPrice&&e.push(`ListPrice ge ${t.minPrice}`),t.maxPrice&&e.push(`ListPrice le ${t.maxPrice}`),t.city&&e.push(`City eq '${t.city}'`),t.state&&e.push(`StateOrProvince eq '${t.state}'`),t.zip&&e.push(`PostalCode eq '${t.zip}'`),t.propertyType)if(Array.isArray(t.propertyType)){const i=t.propertyType.map(t=>`PropertyType eq '${t}'`);e.push(`(${i.join(" or ")})`)}else e.push(`PropertyType eq '${t.propertyType}'`);t.minBedrooms&&e.push(`BedroomsTotal ge ${t.minBedrooms}`),t.minBathrooms&&e.push(`BathroomsTotalInteger ge ${t.minBathrooms}`),t.minSqft&&e.push(`LivingAreaSqFt ge ${t.minSqft}`),t.maxSqft&&e.push(`LivingAreaSqFt le ${t.maxSqft}`);const i=await this.queryListings({filter:e.join(" and "),orderby:"ModificationTimestamp desc",top:t.limit||50});return{listings:i.value?.map(t=>this.transformFromMLS("listing",t))||[],totalCount:i["@odata.count"]}}async getListingDetails(t){try{const e=await this.getListing(t),i=await this.getListingMedia(t),s=this.transformFromMLS("listing",e),n=i.value?.map(t=>this.transformFromMLS("media",t))||[];if(s.media=n,s.featured_image=n.find(t=>t.is_preferred)?.url||n[0]?.url,s.gallery=n.map(t=>t.url),s.listing_agent_id)try{const t=await this.getAgent(s.listing_agent_id);s.listing_agent=this.transformFromMLS("agent",t)}catch(t){this.log(`Failed to get agent info: ${t.message}`,"error")}return s}catch(t){throw this.log(`Error getting listing details: ${t.message}`,"error"),t}}async syncListings(t={}){if(this.syncInProgress)return this.log("Sync already in progress"),{changes:0};try{this.syncInProgress=!0,this.emit("sync:started",{type:"mls_listings"});const e=await this.getListingChanges(t);if(0===e.length)return this.log("No listing changes found"),{changes:0};const i=10,s=[];for(let t=0;t<e.length;t+=i){const n=e.slice(t,t+i);for(const t of n)try{const e=await this.getListingDetails(t.ListingKey),i=new DashboardAjax;(await i.request("sync_listing_from_mls",{listing:e,mls_id:t.ListingKey})).success&&s.push(e)}catch(e){this.log(`Error processing listing ${t.ListingKey}: ${e.message}`,"error")}t+i<e.length&&await new Promise(t=>setTimeout(t,1e3))}return this.lastSyncTime=new Date,this.saveState(),this.emit("sync:completed",{type:"mls_listings",processed:s.length,total:e.length}),{changes:s.length}}catch(t){throw this.emit("sync:error",{type:"mls_listings",error:t}),t}finally{this.syncInProgress=!1}}async getListingChanges(t={}){let e="StandardStatus eq 'Active'";return this.lastSyncTime&&!t.fullSync&&(e+=` and ModificationTimestamp gt ${this.lastSyncTime.toISOString()}`),(await this.queryListings({select:"ListingKey,ModificationTimestamp",filter:e,orderby:"ModificationTimestamp asc",top:t.limit||1e3})).value||[]}transformFromMLS(t,e){const i=this.fieldMappings[t],s={mls_source:this.mlsId,mls_updated:(new Date).toISOString()};return Object.entries(i).forEach(([i,n])=>{const a=e[i];null!=a&&(s[n]=this.transformFieldValue(a,n,t))}),"listing"===t&&e.StandardStatus&&(s.status=this.statusMappings[e.StandardStatus]||"active"),"listing"===t&&(s.idx_disclaimer=this.idxCompliance.disclaimerText.replace("[MLS_NAME]",this.mlsId),s.idx_logo=this.idxCompliance.logoUrl,s.courtesy_of=e.ListOfficeName||""),s}transformFieldValue(t,e,i){return Array.isArray(t)?t.join(", "):t instanceof Date||"string"==typeof t&&t.match(/^\d{4}-\d{2}-\d{2}/)?new Date(t).toISOString():e.includes("price")||e.includes("fee")||e.includes("tax")||e.includes("sqft")||e.includes("size")?parseFloat(t)||0:e.includes("bedrooms")||e.includes("bathrooms")||e.includes("year")||e.includes("spaces")?parseInt(t)||0:"boolean"==typeof t?t:String(t)}generateIDXCompliantHTML(t){const e=this.idxCompliance.disclaimerText.replace("[MLS_NAME]",this.mlsId);return`\n            <div class="idx-listing" data-mls-id="${t.mls_id}">\n                <div class="listing-content">\n                    ${this.generateListingHTML(t)}\n                </div>\n                <div class="idx-compliance">\n                    <div class="idx-disclaimer">${e}</div>\n                    ${this.idxCompliance.logoUrl?`<img src="${this.idxCompliance.logoUrl}" alt="MLS Logo" class="idx-logo">`:""}\n                    <div class="idx-timestamp">Last updated: ${new Date(t.updated_at).toLocaleDateString()}</div>\n                </div>\n            </div>\n        `}validateIDXCompliance(t){const e=this.idxCompliance.listingDetailRequirements,i=[];if(e.requiredFields&&e.requiredFields.forEach(e=>{t[e]||i.push(`Missing required field: ${e}`)}),t.idx_disclaimer||i.push("Missing IDX disclaimer"),t.updated_at){const e=new Date(t.updated_at),s=this.idxCompliance.updateFrequency;Date.now()-e.getTime()>s&&i.push("Listing data is stale and needs update")}return{compliant:0===i.length,violations:i}}async getStatus(){try{return await this.getMetadata(),{status:"connected",mls_id:this.mlsId,authenticated:this.authenticated,token_expires:this.tokenExpiry?.toISOString(),last_sync:this.lastSyncTime?.toISOString(),rate_limit:this.getRateLimitStatus(),idx_compliant:!0}}catch(t){return{status:"error",error:t.message,authenticated:!1}}}getSyncStats(){return{last_sync_time:this.lastSyncTime,sync_in_progress:this.syncInProgress,delta_token:this.deltaToken,cache_size:this.cache.size,token_valid:this.tokenExpiry>new Date}}async forceFullResync(){return this.lastSyncTime=null,this.deltaToken=null,this.clearCache(),this.saveState(),this.syncListings({fullSync:!0})}async validateCredentials(){if(!this.clientId||!this.clientSecret)throw new Error("MLS credentials not configured");if(!this.dataUrl||!this.tokenUrl)throw new Error("MLS endpoints not configured");this.authenticated&&!this.needsTokenRefresh()||await this.authenticate()}destroy(){this.saveState(),super.destroy()}}window.MLSIntegration=t},480:function(){class t{constructor(){this.state=null,this.ajax=null,this.components=new Map,this.initialized=!1,this.sections={overview:null,listings:null,leads:null,analytics:null,tools:null,settings:null},this.router=null,this.eventBus=new EventTarget}async init(){if(!this.initialized)try{this.initializeCore(),this.setupRouting(),await this.initializeComponents(),this.setupEventListeners(),await this.loadInitialData(),this.initializeSections(),this.navigateToInitialSection(),this.initialized=!0,this.log("Dashboard initialized successfully")}catch(t){console.error("Dashboard initialization failed:",t),this.showError("Failed to initialize dashboard")}}initializeCore(){this.state=new DashboardState,window.dashboardState=this.state,this.ajax=new DashboardAjax,window.dashboardAjax=this.ajax,this.state.addMiddleware((t,e,i,s)=>{this.handleStateChange(t,e,i,s)}),this.log("Core systems initialized")}setupRouting(){this.router={currentSection:"overview",navigate:(t,e=null)=>{this.navigateToSection(t,e)},back:()=>{window.history.back()}},window.addEventListener("popstate",t=>{t.state?.section&&this.state.setCurrentSection(t.state.section)})}async initializeComponents(){const t=document.querySelector("#dashboard-search");if(t){const e=new SearchFilter(t);this.components.set("search",e)}const e=document.querySelector("#flyer-generator");if(e){const t=new FlyerGenerator(e);this.components.set("flyer",t)}window.ComponentRegistry.initFromDOM(),this.log("Components initialized")}setupEventListeners(){document.addEventListener("click",t=>{const e=t.target.closest("[data-section]");if(e){t.preventDefault();const i=e.dataset.section,s=e.dataset.subsection;this.navigateToSection(i,s)}}),document.addEventListener("click",t=>{t.target.closest(".refresh-data")&&(t.preventDefault(),this.refreshCurrentSection())}),document.addEventListener("keydown",t=>{this.handleKeyboardShortcuts(t)}),window.addEventListener("resize",()=>{this.handleWindowResize()}),window.addEventListener("online",()=>{this.handleOnlineStatus(!0)}),window.addEventListener("offline",()=>{this.handleOnlineStatus(!1)}),this.log("Event listeners setup complete")}async loadInitialData(){try{this.state.setLoading(!0);const t=await this.ajax.getDashboardStats();t.success&&this.updateDashboardStats(t.data);const e=await this.ajax.getListings();e.success&&this.state.setListings(e.data.listings);const i=await this.ajax.getLeads({limit:10});i.success&&this.state.setLeads(i.data.leads);const s=await this.ajax.getPreferences();s.success&&this.applyUserPreferences(s.data),this.log("Initial data loaded")}catch(t){console.error("Failed to load initial data:",t),this.state.addError("Failed to load dashboard data")}finally{this.state.setLoading(!1)}}initializeSections(){this.sections.overview={element:document.querySelector("#overview-section"),load:()=>this.loadOverviewSection(),refresh:()=>this.refreshOverviewSection()},this.sections.listings={element:document.querySelector("#listings-section"),load:()=>this.loadListingsSection(),refresh:()=>this.refreshListingsSection()},this.sections.leads={element:document.querySelector("#leads-section"),load:()=>this.loadLeadsSection(),refresh:()=>this.refreshLeadsSection()},this.sections.analytics={element:document.querySelector("#analytics-section"),load:()=>this.loadAnalyticsSection(),refresh:()=>this.refreshAnalyticsSection()},this.sections.tools={element:document.querySelector("#tools-section"),load:()=>this.loadToolsSection(),refresh:()=>this.refreshToolsSection()},this.sections.settings={element:document.querySelector("#settings-section"),load:()=>this.loadSettingsSection(),refresh:()=>this.refreshSettingsSection()},this.log("Sections initialized")}navigateToInitialSection(){const t=new URLSearchParams(window.location.search).get("section")||this.state.getCurrentSection();this.navigateToSection(t)}navigateToSection(t,e=null){if(this.sections[t])try{this.hideCurrentSection(),this.state.setCurrentSection(t),e&&this.state.setCurrentSubsection(e),this.updateNavigationUI(t),this.loadSection(t),this.updateBrowserHistory(t,e),this.log(`Navigated to section: ${t}`)}catch(e){console.error(`Failed to navigate to section ${t}:`,e),this.state.addError(`Failed to load ${t} section`)}else console.warn(`Unknown section: ${t}`)}hideCurrentSection(){document.querySelectorAll(".dashboard-section").forEach(t=>{t.classList.add("hidden")})}async loadSection(t){const e=this.sections[t];if(e)try{e.element&&e.element.classList.remove("hidden"),e.load&&await e.load()}catch(e){console.error(`Failed to load section ${t}:`,e),this.state.addError(`Failed to load ${t} section`)}}updateNavigationUI(t){document.querySelectorAll(".nav-item").forEach(t=>{t.classList.remove("active")});const e=document.querySelector(`[data-section="${t}"]`);e&&e.classList.add("active"),this.updatePageTitle(t),this.updateBreadcrumbs(t)}updatePageTitle(t){const e={overview:"Dashboard Overview",listings:"Property Listings",leads:"Lead Management",analytics:"Analytics & Reports",tools:"Marketing Tools",settings:"Settings"}[t]||"Dashboard";document.title=`${e} - Happy Place Housing`;const i=document.querySelector(".page-title");i&&(i.textContent=e)}updateBreadcrumbs(t){const e=document.querySelector(".breadcrumbs");e&&(e.innerHTML=`\n            <span class="breadcrumb-item">\n                <a href="?section=overview">Dashboard</a>\n            </span>\n            <span class="breadcrumb-separator">›</span>\n            <span class="breadcrumb-item active">\n                ${{overview:"Overview",listings:"Listings",leads:"Leads",analytics:"Analytics",tools:"Tools",settings:"Settings"}[t]||t}\n            </span>\n        `)}updateBrowserHistory(t,e){const i=new URL(window.location);i.searchParams.set("section",t),e?i.searchParams.set("subsection",e):i.searchParams.delete("subsection"),window.history.pushState({section:t,subsection:e},"",i.toString())}async loadOverviewSection(){try{const t=await this.ajax.getDashboardStats();t.success&&this.updateDashboardStats(t.data),this.updateQuickStats(),this.loadRecentActivity()}catch(t){console.error("Failed to load overview section:",t)}}async loadListingsSection(){try{if(this.state.isCacheStale("listings")){const t=await this.ajax.getListings();t.success&&this.state.setListings(t.data.listings)}this.updateListingsDisplay()}catch(t){console.error("Failed to load listings section:",t)}}async loadLeadsSection(){try{if(this.state.isCacheStale("leads")){const t=await this.ajax.getLeads();t.success&&this.state.setLeads(t.data.leads)}this.updateLeadsDisplay()}catch(t){console.error("Failed to load leads section:",t)}}async loadAnalyticsSection(){try{const t=await this.ajax.getAnalytics();t.success&&(this.state.setPerformance(t.data),this.updateAnalyticsDisplay())}catch(t){console.error("Failed to load analytics section:",t)}}async loadToolsSection(){}async loadSettingsSection(){try{const t=await this.ajax.getPreferences();t.success&&this.updateSettingsForm(t.data)}catch(t){console.error("Failed to load settings section:",t)}}updateDashboardStats(t){const e={"total-listings":t.total_listings||0,"active-listings":t.active_listings||0,"pending-leads":t.pending_leads||0,"monthly-views":t.monthly_views||0};Object.entries(e).forEach(([t,e])=>{const i=document.getElementById(t);i&&this.animateNumber(i,e)})}updateQuickStats(){const t=this.state.getListings(),e=this.state.getLeads(),i=t.filter(t=>"active"===t.status).length,s=e.filter(t=>{const e=new Date(t.created_at),i=new Date;return i.setDate(i.getDate()-1),e>i}).length;this.updateStatCard("active-listings-quick",i),this.updateStatCard("new-leads-quick",s)}updateStatCard(t,e){const i=document.getElementById(t);i&&this.animateNumber(i,e)}animateNumber(t,e){const i=parseInt(t.textContent)||0,s=(e-i)/20;let n=i;const a=()=>{n+=s,s>0&&n>=e||s<0&&n<=e?t.textContent=e:(t.textContent=Math.round(n),requestAnimationFrame(a))};0!==s&&a()}updateListingsDisplay(){const t=this.state.getFilteredListings(),e=document.querySelector("#listings-container");e&&(0!==t.length?(e.innerHTML=t.map(t=>this.getListingCardHTML(t)).join(""),this.initializeListingCards()):e.innerHTML=this.getEmptyListingsHTML())}updateLeadsDisplay(){const t=this.state.getLeads(),e=document.querySelector("#leads-container");e&&(0!==t.length?(e.innerHTML=t.map(t=>this.getLeadCardHTML(t)).join(""),this.initializeLeadCards()):e.innerHTML=this.getEmptyLeadsHTML())}updateAnalyticsDisplay(){const t=this.state.getPerformance();this.updateViewsChart(t.views),this.updateInquiriesChart(t.inquiries),this.updateConversionsChart(t.conversions)}updateSettingsForm(t){Object.entries(t).forEach(([t,e])=>{const i=document.querySelector(`[name="${t}"]`);i&&("checkbox"===i.type?i.checked=e:i.value=e)})}handleStateChange(t,e,i,s){switch(window.hphAjax?.debug&&console.log("State changed:",{path:t,newValue:e,oldValue:i}),t){case"listings":this.updateListingsDisplay(),this.updateQuickStats();break;case"leads":this.updateLeadsDisplay(),this.updateQuickStats();break;case"ui.loading":this.updateLoadingState(e);break;case"ui.errors":this.updateErrorDisplay(e);break;case"ui.notifications":this.updateNotificationDisplay(e)}this.eventBus.dispatchEvent(new CustomEvent("stateChange",{detail:{path:t,newValue:e,oldValue:i,state:s}}))}handleKeyboardShortcuts(t){if("INPUT"!==t.target.tagName&&"TEXTAREA"!==t.target.tagName&&(t.ctrlKey||t.metaKey))switch(t.key){case"1":t.preventDefault(),this.navigateToSection("overview");break;case"2":t.preventDefault(),this.navigateToSection("listings");break;case"3":t.preventDefault(),this.navigateToSection("leads");break;case"4":t.preventDefault(),this.navigateToSection("analytics");break;case"r":t.preventDefault(),this.refreshCurrentSection()}}handleWindowResize(){this.updateResponsiveLayout(),"analytics"===this.state.getCurrentSection()&&setTimeout(()=>{this.updateAnalyticsDisplay()},100)}handleOnlineStatus(t){t?(this.state.addNotification({type:"success",message:"Connection restored",timeout:3e3}),this.state.checkForStaleData()):this.state.addNotification({type:"warning",message:"Connection lost - working offline",persistent:!0})}async refreshCurrentSection(){const t=this.state.getCurrentSection(),e=this.sections[t];if(e?.refresh)try{this.state.setLoading(!0),await e.refresh(),this.state.addNotification({type:"success",message:"Section refreshed",timeout:2e3})}catch(t){console.error("Failed to refresh section:",t),this.state.addError("Failed to refresh section")}finally{this.state.setLoading(!1)}}applyUserPreferences(t){t.theme&&(document.body.className=document.body.className.replace(/theme-\w+/g,""),document.body.classList.add(`theme-${t.theme}`)),t.defaultViewMode&&this.state.setViewMode(t.defaultViewMode),t.autoRefresh&&this.enableAutoRefresh(t.autoRefreshInterval||3e5)}enableAutoRefresh(t){setInterval(()=>{document.hidden||this.state.checkForStaleData()},t)}updateLoadingState(t){const e=document.querySelector(".loading-indicator");e&&(e.style.display=t?"block":"none"),document.querySelectorAll(".dashboard-section").forEach(e=>{t?e.classList.add("loading"):e.classList.remove("loading")})}updateErrorDisplay(t){const e=document.querySelector("#error-container");e&&(e.innerHTML=t.map(t=>`\n            <div class="error-item" data-error-id="${t.id}">\n                <span class="error-message">${t.message}</span>\n                <button type="button" class="error-dismiss" onclick="dashboardInstance.dismissError('${t.id}')">\n                    ×\n                </button>\n            </div>\n        `).join(""),e.style.display=t.length>0?"block":"none")}updateNotificationDisplay(t){const e=document.querySelector("#notification-container");e&&(e.innerHTML=t.map(t=>`\n            <div class="notification-item notification-${t.type}" data-notification-id="${t.id}">\n                <span class="notification-message">${t.message}</span>\n                ${t.action?`\n                    <button type="button" class="notification-action" onclick="(${t.action.callback})()">\n                        ${t.action.label}\n                    </button>\n                `:""}\n                <button type="button" class="notification-dismiss" onclick="dashboardInstance.dismissNotification('${t.id}')">\n                    ×\n                </button>\n            </div>\n        `).join(""),e.style.display=t.length>0?"block":"none")}dismissError(t){this.state.removeError(t)}dismissNotification(t){this.state.removeNotification(t)}showError(t){this.state.addError(t)}log(t,e="info"){window.hphAjax?.debug&&console[e](`[ModernDashboard] ${t}`)}getEmptyListingsHTML(){return'\n            <div class="empty-state">\n                <div class="empty-icon">🏠</div>\n                <h3>No Listings Found</h3>\n                <p>Add your first property listing to get started.</p>\n                <button type="button" class="btn btn-primary" onclick="location.href=\'?page=add-listing\'">\n                    Add Listing\n                </button>\n            </div>\n        '}getListingCardHTML(t){return`\n            <div class="listing-card" data-listing-id="${t.id}">\n                <div class="listing-image">\n                    <img src="${t.featured_image||"/wp-content/themes/Happy Place Theme/assets/images/placeholder-home.jpg"}" \n                         alt="${t.address}" loading="lazy">\n                    <div class="listing-status status-${t.status}">\n                        ${t.status}\n                    </div>\n                </div>\n                <div class="listing-info">\n                    <h3 class="listing-address">${t.address}</h3>\n                    <p class="listing-price">$${parseInt(t.price||0).toLocaleString()}</p>\n                    <div class="listing-details">\n                        <span>${t.bedrooms||0} bed</span>\n                        <span>${t.bathrooms||0} bath</span>\n                        <span>${t.sqft?parseInt(t.sqft).toLocaleString()+" sq ft":""}</span>\n                    </div>\n                    <div class="listing-actions">\n                        <button type="button" class="btn btn-small btn-outline" onclick="window.open('${t.permalink}', '_blank')">\n                            View\n                        </button>\n                        <button type="button" class="btn btn-small" onclick="location.href='?page=edit-listing&id=${t.id}'">\n                            Edit\n                        </button>\n                    </div>\n                </div>\n            </div>\n        `}getEmptyLeadsHTML(){return'\n            <div class="empty-state">\n                <div class="empty-icon">👥</div>\n                <h3>No Leads Yet</h3>\n                <p>Leads will appear here when people contact you about your listings.</p>\n            </div>\n        '}getLeadCardHTML(t){return`\n            <div class="lead-card" data-lead-id="${t.id}">\n                <div class="lead-header">\n                    <h4 class="lead-name">${t.name}</h4>\n                    <span class="lead-date">${new Date(t.created_at).toLocaleDateString()}</span>\n                </div>\n                <div class="lead-info">\n                    <p class="lead-contact">\n                        📧 ${t.email}\n                        ${t.phone?`<br>📞 ${t.phone}`:""}\n                    </p>\n                    <p class="lead-property">\n                        Interested in: <strong>${t.property_address}</strong>\n                    </p>\n                    ${t.message?`<p class="lead-message">"${t.message}"</p>`:""}\n                </div>\n                <div class="lead-actions">\n                    <button type="button" class="btn btn-small btn-primary" onclick="location.href='mailto:${t.email}'">\n                        Email\n                    </button>\n                    ${t.phone?`\n                        <button type="button" class="btn btn-small btn-outline" onclick="location.href='tel:${t.phone}'">\n                            Call\n                        </button>\n                    `:""}\n                </div>\n            </div>\n        `}updateViewsChart(t){console.log("Updating views chart with:",t)}updateInquiriesChart(t){console.log("Updating inquiries chart with:",t)}updateConversionsChart(t){console.log("Updating conversions chart with:",t)}updateResponsiveLayout(){console.log("Updating responsive layout")}initializeListingCards(){console.log("Initializing listing cards")}initializeLeadCards(){console.log("Initializing lead cards")}loadRecentActivity(){console.log("Loading recent activity")}refreshOverviewSection(){return this.loadOverviewSection()}refreshListingsSection(){return this.loadListingsSection()}refreshLeadsSection(){return this.loadLeadsSection()}refreshAnalyticsSection(){return this.loadAnalyticsSection()}refreshToolsSection(){return this.loadToolsSection()}refreshSettingsSection(){return this.loadSettingsSection()}}document.addEventListener("DOMContentLoaded",()=>{window.dashboardInstance=new t,window.dashboardInstance.init()}),window.ModernDashboard=t},684:function(){window.DashboardState=class{constructor(){this.state={currentSection:"overview",currentSubsection:null,user:{id:window.hphAjax?.user_id||0,is_admin:window.hphAjax?.is_admin||!1,capabilities:[]},listings:[],leads:[],openHouses:[],performance:{views:[],inquiries:[],conversions:[]},ui:{loading:!1,errors:[],notifications:[],modals:new Set,filters:{},searchQuery:"",sortBy:"date",sortOrder:"DESC",viewMode:"grid"},cache:{lastUpdated:{},ttl:{}}},this.subscribers=new Map,this.middleware=[],this.history=[],this.init()}init(){this.setupPersistence(),this.restoreState(),this.bindEvents(),this.logStateChange("init",null,this.state)}setupPersistence(){setInterval(()=>{this.persistState()},3e4),window.addEventListener("beforeunload",()=>{this.persistState()})}restoreState(){try{const t=localStorage.getItem("hph_dashboard_state");if(t){const e=JSON.parse(t);["currentSection","ui.filters","ui.viewMode","ui.sortBy","ui.sortOrder"].forEach(t=>{const i=this.getNestedValue(e,t);void 0!==i&&this.setNestedValue(this.state,t,i)}),console.log("Dashboard state restored from localStorage")}}catch(t){console.warn("Failed to restore dashboard state:",t)}}persistState(){try{const t={currentSection:this.state.currentSection,currentSubsection:this.state.currentSubsection,ui:{filters:this.state.ui.filters,searchQuery:this.state.ui.searchQuery,sortBy:this.state.ui.sortBy,sortOrder:this.state.ui.sortOrder,viewMode:this.state.ui.viewMode},timestamp:Date.now()};localStorage.setItem("hph_dashboard_state",JSON.stringify(t))}catch(t){console.warn("Failed to persist dashboard state:",t)}}bindEvents(){window.addEventListener("popstate",t=>{t.state?.section&&this.setCurrentSection(t.state.section)}),document.addEventListener("visibilitychange",()=>{document.hidden||this.checkForStaleData()})}getCurrentSection(){return this.state.currentSection}getCurrentSubsection(){return this.state.currentSubsection}getUser(){return{...this.state.user}}getListings(){return[...this.state.listings]}getListing(t){return this.state.listings.find(e=>e.id===parseInt(t))}getLeads(){return[...this.state.leads]}getUI(){return{...this.state.ui}}getPerformance(){return{...this.state.performance}}getFilteredListings(){let t=[...this.state.listings];if(this.state.ui.searchQuery){const e=this.state.ui.searchQuery.toLowerCase();t=t.filter(t=>t.title.toLowerCase().includes(e)||t.address.toLowerCase().includes(e)||t.description&&t.description.toLowerCase().includes(e))}return Object.entries(this.state.ui.filters).forEach(([e,i])=>{i&&""!==i&&(t=t.filter(t=>Array.isArray(i)?i.includes(t[e]):t[e]===i))}),t.sort((t,e)=>{const i=t[this.state.ui.sortBy],s=e[this.state.ui.sortBy];let n=0;return i>s&&(n=1),i<s&&(n=-1),"DESC"===this.state.ui.sortOrder?-n:n}),t}setCurrentSection(t){const e=this.state.currentSection;this.state.currentSection=t;const i=new URL(window.location);i.searchParams.set("section",t),window.history.pushState({section:t},"",i.toString()),this.notify("currentSection",t,e),this.logStateChange("setCurrentSection",{section:t},{currentSection:t})}setCurrentSubsection(t){const e=this.state.currentSubsection;this.state.currentSubsection=t,this.notify("currentSubsection",t,e)}setListings(t){this.state.listings=t,this.updateCache("listings"),this.notify("listings",t),this.logStateChange("setListings",{count:t.length},null)}updateListing(t){const e=this.state.listings.findIndex(e=>e.id===t.id);-1!==e?this.state.listings[e]={...this.state.listings[e],...t}:this.state.listings.push(t),this.updateCache("listings"),this.notify("listings",this.state.listings),this.notify("listingUpdated",t),this.logStateChange("updateListing",{id:t.id},null)}removeListing(t){const e=this.state.listings.findIndex(e=>e.id===t);if(-1!==e){const i=this.state.listings.splice(e,1)[0];this.updateCache("listings"),this.notify("listings",this.state.listings),this.notify("listingRemoved",i),this.logStateChange("removeListing",{id:t},null)}}setLeads(t){this.state.leads=t,this.updateCache("leads"),this.notify("leads",t)}addLead(t){this.state.leads.unshift(t),this.updateCache("leads"),this.notify("leads",this.state.leads),this.notify("newLead",t),this.addNotification({type:"success",message:`New lead from ${t.name}`,action:{label:"View Lead",callback:()=>this.setCurrentSection("leads")}})}setPerformance(t){this.state.performance={...this.state.performance,...t},this.updateCache("performance"),this.notify("performance",this.state.performance)}setLoading(t){this.state.ui.loading=t,this.notify("ui.loading",t)}addError(t){const e={id:Date.now(),message:t.message||t,type:t.type||"error",timestamp:new Date,dismissed:!1};this.state.ui.errors.push(e),this.notify("ui.errors",this.state.ui.errors),setTimeout(()=>{this.removeError(e.id)},1e4)}removeError(t){const e=this.state.ui.errors.findIndex(e=>e.id===t);-1!==e&&(this.state.ui.errors.splice(e,1),this.notify("ui.errors",this.state.ui.errors))}addNotification(t){const e={id:Date.now(),type:"info",...t,timestamp:new Date,read:!1};this.state.ui.notifications.unshift(e),this.notify("ui.notifications",this.state.ui.notifications),t.persistent||setTimeout(()=>{this.removeNotification(e.id)},3e4)}removeNotification(t){const e=this.state.ui.notifications.findIndex(e=>e.id===t);-1!==e&&(this.state.ui.notifications.splice(e,1),this.notify("ui.notifications",this.state.ui.notifications))}setSearchQuery(t){this.state.ui.searchQuery=t,this.notify("ui.searchQuery",t),this.notify("ui.filteredListings",this.getFilteredListings())}setFilter(t,e){this.state.ui.filters[t]=e,this.notify("ui.filters",this.state.ui.filters),this.notify("ui.filteredListings",this.getFilteredListings())}clearFilters(){this.state.ui.filters={},this.state.ui.searchQuery="",this.notify("ui.filters",this.state.ui.filters),this.notify("ui.searchQuery",""),this.notify("ui.filteredListings",this.getFilteredListings())}setSort(t,e="DESC"){this.state.ui.sortBy=t,this.state.ui.sortOrder=e,this.notify("ui.sort",{sortBy:t,sortOrder:e}),this.notify("ui.filteredListings",this.getFilteredListings())}setViewMode(t){this.state.ui.viewMode=t,this.notify("ui.viewMode",t)}subscribe(t,e){return this.subscribers.has(t)||this.subscribers.set(t,new Set),this.subscribers.get(t).add(e),()=>{const i=this.subscribers.get(t);i&&i.delete(e)}}notify(t,e,i=null){this.middleware.forEach(s=>{s(t,e,i,this.state)});const s=this.subscribers.get(t);s&&s.forEach(s=>{try{s(e,i,t,this.state)}catch(t){console.error("State subscription error:",t)}});const n=this.subscribers.get("*");n&&n.forEach(s=>{try{s(e,i,t,this.state)}catch(t){console.error("Wildcard subscription error:",t)}})}addMiddleware(t){this.middleware.push(t)}updateCache(t){this.state.cache.lastUpdated[t]=Date.now(),this.state.cache.ttl[t]=Date.now()+3e5}isCacheStale(t){const e=this.state.cache.ttl[t];return!e||Date.now()>e}checkForStaleData(){const t=Object.keys(this.state.cache.ttl).filter(t=>this.isCacheStale(t));t.length>0&&this.notify("refreshNeeded",t)}getNestedValue(t,e){return e.split(".").reduce((t,e)=>t?.[e],t)}setNestedValue(t,e,i){const s=e.split("."),n=s.pop();s.reduce((t,e)=>(t[e]||(t[e]={}),t[e]),t)[n]=i}logStateChange(t,e,i){if(window.hphAjax?.debug){const s={action:t,payload:e,newState:i,timestamp:(new Date).toISOString()};this.history.push(s),this.history.length>100&&this.history.shift(),console.log("State Change:",s)}}getStateHistory(){return[...this.history]}getStateSnapshot(){return JSON.parse(JSON.stringify(this.state))}reset(){const t={currentSection:"overview",currentSubsection:null,listings:[],leads:[],openHouses:[],performance:{views:[],inquiries:[],conversions:[]},ui:{loading:!1,errors:[],notifications:[],modals:new Set,filters:{},searchQuery:"",sortBy:"date",sortOrder:"DESC",viewMode:"grid"},cache:{lastUpdated:{},ttl:{}}};this.state={...this.state,...t},this.notify("reset",this.state),this.logStateChange("reset",null,this.state)}}},702:function(){class t extends BaseIntegration{constructor(t={}){super({apiUrl:"https://api.airtable.com/v0",rateLimitRequests:5,rateLimitWindow:1e3,cacheTTL:6e4,...t}),this.baseId=t.baseId||"",this.tableNames={listings:t.listingsTable||"Listings",agents:t.agentsTable||"Agents",leads:t.leadsTable||"Leads",analytics:t.analyticsTable||"Analytics"},this.fieldMappings={listings:{ID:"id",Address:"address",Price:"price",Bedrooms:"bedrooms",Bathrooms:"bathrooms","Square Feet":"sqft","Property Type":"property_type",Status:"status",Description:"description","Featured Image":"featured_image",Gallery:"gallery","MLS Number":"mls_number",Agent:"agent_id",Created:"created_at",Updated:"updated_at",City:"city",State:"state",ZIP:"zip","Lot Size":"lot_size","Year Built":"year_built","HOA Fee":"hoa_fee","Property Tax":"property_tax"},agents:{ID:"id",Name:"name",Email:"email",Phone:"phone",License:"license_number",Bio:"bio",Photo:"photo",Active:"active"},leads:{ID:"id",Name:"name",Email:"email",Phone:"phone",Property:"property_id",Message:"message",Source:"source",Status:"status",Created:"created_at","Follow Up":"follow_up_date"}},this.lastSyncTime=null,this.syncInProgress=!1,this.syncQueue=[],this.conflictResolver=null,this.syncInterval=t.syncInterval||3e5,this.syncTimer=null}async init(){await super.init(),this.lastSyncTime=localStorage.getItem("airtable_last_sync"),this.lastSyncTime&&(this.lastSyncTime=new Date(this.lastSyncTime)),this.startRealTimeSync(),this.setupAirtableWebhooks()}async authenticate(){if(!this.config.apiKey)throw new Error("Airtable API key is required");if(!this.baseId)throw new Error("Airtable base ID is required");try{await this.getBaseSchema(),this.authenticated=!0,this.lastAuthTime=Date.now(),this.log("Airtable authentication successful")}catch(t){throw new Error(`Airtable authentication failed: ${t.message}`)}}buildHeaders(t={}){return{Authorization:`Bearer ${this.config.apiKey}`,"Content-Type":"application/json",...t}}async getBaseSchema(){return this.request(`meta/bases/${this.baseId}/tables`,{cache:!0,cacheTTL:36e5})}async getRecords(t,e={}){const i=new URLSearchParams;e.fields&&e.fields.forEach(t=>i.append("fields[]",t)),e.filterByFormula&&i.set("filterByFormula",e.filterByFormula),e.sort&&e.sort.forEach((t,e)=>{i.set(`sort[${e}][field]`,t.field),i.set(`sort[${e}][direction]`,t.direction||"asc")}),e.maxRecords&&i.set("maxRecords",e.maxRecords),e.offset&&i.set("offset",e.offset);const s=`${this.baseId}/${encodeURIComponent(t)}?${i.toString()}`;return this.request(s)}async getAllRecords(t,e={}){let i=[],s=null;do{const n=await this.getRecords(t,{...e,offset:s});i=i.concat(n.records),s=n.offset}while(s);return{records:i}}async getRecord(t,e){const i=`${this.baseId}/${encodeURIComponent(t)}/${e}`;return this.request(i)}async createRecords(t,e){const i=`${this.baseId}/${encodeURIComponent(t)}`,s=[];for(let t=0;t<e.length;t+=10)s.push(e.slice(t,t+10));const n=[];for(const t of s){const e=await this.request(i,{method:"POST",data:{records:t},cache:!1});n.push(...e.records)}return{records:n}}async updateRecords(t,e){const i=`${this.baseId}/${encodeURIComponent(t)}`,s=[];for(let t=0;t<e.length;t+=10)s.push(e.slice(t,t+10));const n=[];for(const t of s){const e=await this.request(i,{method:"PATCH",data:{records:t},cache:!1});n.push(...e.records)}return{records:n}}async deleteRecords(t,e){const i=`${this.baseId}/${encodeURIComponent(t)}`,s=[];for(let t=0;t<e.length;t+=10)s.push(e.slice(t,t+10));const n=[];for(const t of s){const e=t.map(t=>`records[]=${t}`).join("&"),s=await this.request(`${i}?${e}`,{method:"DELETE",cache:!1});n.push(...s.records)}return{records:n}}async getListings(t={}){const e={sort:[{field:"Updated",direction:"desc"}]};if(Object.keys(t).length>0){const i=[];Object.entries(t).forEach(([t,e])=>{const s=this.getAirtableField("listings",t);if(s)if(Array.isArray(e)){const t=e.map(t=>`{${s}} = "${t}"`);i.push(`(${t.join(", ")})`)}else i.push(`{${s}} = "${e}"`)}),i.length>0&&(e.filterByFormula=`AND(${i.join(", ")})`)}return{listings:(await this.getAllRecords(this.tableNames.listings,e)).records.map(t=>this.transformFromAirtable("listings",t))}}async createListing(t){const e=this.transformToAirtable("listings",t),i=await this.createRecords(this.tableNames.listings,[{fields:e}]);if(i.records.length>0)return this.transformFromAirtable("listings",i.records[0]);throw new Error("Failed to create listing in Airtable")}async updateListing(t,e){const i=this.transformToAirtable("listings",e),s=await this.updateRecords(this.tableNames.listings,[{id:t,fields:i}]);if(s.records.length>0)return this.transformFromAirtable("listings",s.records[0]);throw new Error("Failed to update listing in Airtable")}async syncListings(){if(this.syncInProgress)this.log("Sync already in progress, skipping");else try{this.syncInProgress=!0,this.emit("sync:started",{type:"listings"});const t=await this.getChangesSinceLastSync("listings");if(0===t.length)return this.log("No changes found since last sync"),{changes:0};const e=await this.processListingChanges(t);return this.lastSyncTime=new Date,localStorage.setItem("airtable_last_sync",this.lastSyncTime.toISOString()),this.emit("sync:completed",{type:"listings",processed:e.length,changes:t.length}),{changes:e.length}}catch(t){throw this.emit("sync:error",{type:"listings",error:t}),t}finally{this.syncInProgress=!1}}async getChangesSinceLastSync(t){if(!this.lastSyncTime)return this.log("First sync - getting all records"),(await this.getAllRecords(this.tableNames[t])).records;const e=`IS_AFTER({Updated}, "${this.lastSyncTime.toISOString()}")`;return(await this.getAllRecords(this.tableNames[t],{filterByFormula:e,sort:[{field:"Updated",direction:"asc"}]})).records}async processListingChanges(t){const e=[];for(const i of t)try{const t=this.transformFromAirtable("listings",i),s=new DashboardAjax,n=await s.request("sync_listing_from_airtable",{listing:t,airtable_id:i.id});n.success?(e.push(t),this.log(`Synced listing: ${t.address}`)):this.log(`Failed to sync listing: ${n.data?.error}`,"error")}catch(t){this.log(`Error processing listing ${i.id}: ${t.message}`,"error")}return e}transformFromAirtable(t,e){const i=this.fieldMappings[t],s={airtable_id:e.id,airtable_created:e.createdTime};return Object.entries(i).forEach(([t,i])=>{const n=e.fields[t];void 0!==n&&(s[i]=this.transformFieldValue(n,i))}),s}transformToAirtable(t,e){const i=this.fieldMappings[t],s={};return Object.entries(i).forEach(([t,i])=>{const n=e[i];null!=n&&""!==n&&(s[t]=this.transformFieldValueToAirtable(n,i))}),s}transformFieldValue(t,e){return Array.isArray(t)&&t.length>0&&t[0].url?t.map(t=>t.url):Array.isArray(t)&&t.length>0&&"string"==typeof t[0]?t[0]:e.includes("price")||e.includes("sqft")||e.includes("fee")||e.includes("tax")?parseFloat(t)||0:e.includes("bedrooms")||e.includes("bathrooms")||e.includes("year")?parseInt(t)||0:t}transformFieldValueToAirtable(t,e){return Array.isArray(t)?e.includes("image")||e.includes("gallery")?t.map(t=>({url:t})):t[0]:t}getAirtableField(t,e){const i=this.fieldMappings[t];for(const[t,s]of Object.entries(i))if(s===e)return t;return null}startRealTimeSync(){this.syncTimer&&clearInterval(this.syncTimer),this.syncTimer=setInterval(async()=>{try{await this.syncListings()}catch(t){this.log(`Real-time sync error: ${t.message}`,"error")}},this.syncInterval),this.log(`Real-time sync started with ${this.syncInterval/1e3}s interval`)}stopRealTimeSync(){this.syncTimer&&(clearInterval(this.syncTimer),this.syncTimer=null,this.log("Real-time sync stopped"))}setupAirtableWebhooks(){this.registerWebhook("listing.created",t=>{this.handleListingCreated(t)}),this.registerWebhook("listing.updated",t=>{this.handleListingUpdated(t)}),this.registerWebhook("listing.deleted",t=>{this.handleListingDeleted(t)})}async handleListingCreated(t){try{const e=this.transformFromAirtable("listings",t.record),i=new DashboardAjax;await i.request("create_listing_from_airtable",{listing:e,airtable_id:t.record.id}),this.emit("listing:created",{listing:e})}catch(t){this.log(`Webhook handling error (created): ${t.message}`,"error")}}async handleListingUpdated(t){try{const e=this.transformFromAirtable("listings",t.record),i=new DashboardAjax;await i.request("update_listing_from_airtable",{listing:e,airtable_id:t.record.id}),this.emit("listing:updated",{listing:e})}catch(t){this.log(`Webhook handling error (updated): ${t.message}`,"error")}}async handleListingDeleted(t){try{const e=new DashboardAjax;await e.request("delete_listing_from_airtable",{airtable_id:t.record.id}),this.emit("listing:deleted",{airtable_id:t.record.id})}catch(t){this.log(`Webhook handling error (deleted): ${t.message}`,"error")}}async getStatus(){try{const t=await this.getBaseSchema();return{status:"connected",base_id:this.baseId,tables:t.tables?.length||0,last_sync:this.lastSyncTime,sync_active:!!this.syncTimer,rate_limit:this.getRateLimitStatus()}}catch(t){return{status:"error",error:t.message}}}getSyncStats(){return{last_sync_time:this.lastSyncTime,sync_in_progress:this.syncInProgress,sync_interval:this.syncInterval,queue_size:this.syncQueue.length,cache_size:this.cache.size}}async forceFullResync(){return this.lastSyncTime=null,localStorage.removeItem("airtable_last_sync"),this.clearCache(),this.syncListings()}destroy(){this.stopRealTimeSync(),super.destroy()}}window.AirtableIntegration=t},807:function(){window.DashboardAjax=class{constructor(){this.baseUrl=window.hphAjax?.ajax_url||"/wp-admin/admin-ajax.php",this.nonce=window.hphAjax?.nonce||"",this.timeout=3e4,this.retryAttempts=3,this.retryDelay=1e3,this.activeRequests=new Map,this.requestQueue=[],this.cache=new Map,this.maxCacheSize=100,this.defaultCacheTTL=3e5,this.requestCounts=new Map,this.rateLimitWindow=6e4,this.maxRequestsPerWindow=100,this.init()}init(){setInterval(()=>{this.cleanupCache()},6e4),setInterval(()=>{this.cleanupRateLimiting()},this.rateLimitWindow),document.addEventListener("visibilitychange",()=>{document.hidden?this.pauseRequests():this.resumeRequests()})}async request(t,e={},i={}){const s={method:"POST",cache:!1,cacheTTL:this.defaultCacheTTL,retries:this.retryAttempts,timeout:this.timeout,priority:"normal",...i},n=this.generateRequestKey(t,e);if(!this.checkRateLimit())throw new Error("Rate limit exceeded");if(s.cache){const t=this.getFromCache(n);if(t)return t}if(this.activeRequests.has(n))return this.activeRequests.get(n);const a=this.executeRequest(t,e,s);this.activeRequests.set(n,a);try{const t=await a;return s.cache&&t.success&&this.setCache(n,t,s.cacheTTL),t}finally{this.activeRequests.delete(n)}}async executeRequest(t,e,i){let s;for(let n=0;n<=i.retries;n++)try{return await this.makeHttpRequest(t,e,i)}catch(t){if(s=t,t.status>=400&&t.status<500)break;n<i.retries&&await this.delay(this.retryDelay*Math.pow(2,n))}throw s}async makeHttpRequest(t,e,i){const s=new AbortController,n=setTimeout(()=>s.abort(),i.timeout);try{const a=new FormData;a.append("action",`hph_${t}`),a.append("nonce",this.nonce),Object.entries(e).forEach(([t,e])=>{e instanceof File||e instanceof Blob?a.append(t,e):Array.isArray(e)||"object"==typeof e?a.append(t,JSON.stringify(e)):a.append(t,e)});const o=await fetch(this.baseUrl,{method:i.method,body:a,signal:s.signal,credentials:"same-origin"});if(clearTimeout(n),!o.ok)throw new Error(`HTTP ${o.status}: ${o.statusText}`);const r=await o.json();if(!r.success&&r.data?.error)throw new Error(r.data.error);return r}catch(t){if(clearTimeout(n),"AbortError"===t.name)throw new Error("Request timeout");throw t}}async getListings(t={}){return this.request("get_listings",t,{cache:!0,cacheTTL:12e4})}async getListing(t){return this.request("get_listing",{id:t},{cache:!0,cacheTTL:3e5})}async saveListing(t){return this.request("save_listing",t,{cache:!1})}async deleteListing(t){return this.clearCacheByPattern(`get_listing_${t}`),this.clearCacheByPattern("get_listings"),this.request("delete_listing",{id:t},{cache:!1})}async getLeads(t={}){return this.request("get_leads",t,{cache:!0,cacheTTL:6e4})}async getAnalytics(t="30d"){return this.request("get_analytics",{period:t},{cache:!0,cacheTTL:6e5})}async searchListings(t,e={}){return this.request("search_listings",{query:t,...e},{cache:!0,cacheTTL:6e4})}async generateFlyer(t,e="default"){return this.request("generate_flyer",{listing_id:t,template:e},{cache:!1,timeout:6e4})}async uploadMedia(t,e={}){return this.request("upload_media",{file:t,...e},{cache:!1,timeout:12e4})}async getDashboardStats(){return this.request("get_dashboard_stats",{},{cache:!0,cacheTTL:3e5})}async updatePreferences(t){return this.request("update_preferences",t,{cache:!1})}async getPreferences(){return this.request("get_preferences",{},{cache:!0,cacheTTL:6e5})}generateRequestKey(t,e){const i=Object.keys(e).sort().reduce((t,i)=>(t[i]=e[i],t),{});return`${t}_${btoa(JSON.stringify(i))}`}getFromCache(t){const e=this.cache.get(t);return e&&e.expires>Date.now()?e.data:(e&&this.cache.delete(t),null)}setCache(t,e,i=this.defaultCacheTTL){if(this.cache.size>=this.maxCacheSize){const t=this.cache.keys().next().value;this.cache.delete(t)}this.cache.set(t,{data:e,expires:Date.now()+i,created:Date.now()})}clearCacheByPattern(t){const e=new RegExp(t);for(const t of this.cache.keys())e.test(t)&&this.cache.delete(t)}clearCache(){this.cache.clear()}cleanupCache(){const t=Date.now();for(const[e,i]of this.cache.entries())i.expires<=t&&this.cache.delete(e)}checkRateLimit(){const t=Date.now(),e=t-this.rateLimitWindow;let i=0;for(const[t,s]of this.requestCounts.entries())t>e&&(i+=s);if(i>=this.maxRequestsPerWindow)return!1;const s=6e4*Math.floor(t/6e4);return this.requestCounts.set(s,(this.requestCounts.get(s)||0)+1),!0}cleanupRateLimiting(){const t=Date.now()-this.rateLimitWindow;for(const e of this.requestCounts.keys())e<t&&this.requestCounts.delete(e)}cancelAllRequests(){this.activeRequests.forEach((t,e)=>{}),this.activeRequests.clear()}pauseRequests(){console.log("Pausing dashboard requests")}resumeRequests(){console.log("Resuming dashboard requests")}delay(t){return new Promise(e=>setTimeout(e,t))}getCacheStats(){const t=Date.now();let e=0,i=0;for(const s of this.cache.values())s.expires<=t?e++:i++;return{total:this.cache.size,active:i,expired:e,maxSize:this.maxCacheSize}}getActiveRequestCount(){return this.activeRequests.size}getRateLimitStatus(){const t=Date.now(),e=t-this.rateLimitWindow;let i=0;for(const[t,s]of this.requestCounts.entries())t>e&&(i+=s);return{requestCount:i,maxRequests:this.maxRequestsPerWindow,remaining:this.maxRequestsPerWindow-i,resetTime:6e4*Math.ceil((t+this.rateLimitWindow)/6e4)}}}},973:function(){window.NotificationSystem=class{constructor(t={}){this.config={websocketUrl:t.websocketUrl||"",pushNotifications:!1!==t.pushNotifications,soundEnabled:!1!==t.soundEnabled,desktopNotifications:!1!==t.desktopNotifications,maxNotifications:t.maxNotifications||100,autoHideDelay:t.autoHideDelay||5e3,...t},this.notifications=[],this.unreadCount=0,this.notificationId=0,this.websocket=null,this.websocketReconnectAttempts=0,this.maxReconnectAttempts=5,this.reconnectDelay=1e3,this.serviceWorkerRegistration=null,this.vapidPublicKey=t.vapidPublicKey||"",this.container=null,this.badge=null,this.panel=null,this.handlers=new Map,this.types={"listing.created":{title:"New Listing Added",icon:"🏠",color:"#10b981",sound:"notification.mp3",priority:"high"},"listing.updated":{title:"Listing Updated",icon:"📝",color:"#3b82f6",sound:"notification.mp3",priority:"medium"},"listing.sold":{title:"Listing Sold",icon:"✅",color:"#f59e0b",sound:"success.mp3",priority:"high"},"lead.received":{title:"New Lead Received",icon:"👤",color:"#8b5cf6",sound:"alert.mp3",priority:"high"},"lead.updated":{title:"Lead Updated",icon:"🔄",color:"#06b6d4",sound:"notification.mp3",priority:"medium"},"sync.completed":{title:"Sync Completed",icon:"🔄",color:"#10b981",sound:"notification.mp3",priority:"low"},"sync.error":{title:"Sync Error",icon:"⚠️",color:"#ef4444",sound:"error.mp3",priority:"high"},"system.alert":{title:"System Alert",icon:"🔔",color:"#f59e0b",sound:"alert.mp3",priority:"high"},reminder:{title:"Reminder",icon:"⏰",color:"#6b7280",sound:"notification.mp3",priority:"medium"}},this.filters={types:[],priority:"all",unreadOnly:!1},this.preferences={desktopNotifications:!0,soundNotifications:!0,pushNotifications:!0,notificationFrequency:"immediate"}}async init(){this.loadPreferences(),this.createUI(),this.config.websocketUrl&&this.setupWebSocket(),this.config.pushNotifications&&await this.setupPushNotifications(),this.config.desktopNotifications&&this.requestDesktopPermission(),this.loadStoredNotifications(),this.setupCleanup(),this.setupVisibilityHandler(),console.log("Notification system initialized")}createUI(){this.container=document.createElement("div"),this.container.className="notification-container",this.container.innerHTML=`\n            <div class="notifications-toast-area"></div>\n            <div class="notifications-panel" style="display: none;">\n                <div class="notifications-header">\n                    <h3>Notifications</h3>\n                    <div class="notifications-controls">\n                        <button class="mark-all-read">Mark All Read</button>\n                        <button class="clear-all">Clear All</button>\n                        <button class="close-panel">×</button>\n                    </div>\n                </div>\n                <div class="notifications-filters">\n                    <select class="filter-type">\n                        <option value="">All Types</option>\n                        ${Object.keys(this.types).map(t=>`<option value="${t}">${this.types[t].title}</option>`).join("")}\n                    </select>\n                    <select class="filter-priority">\n                        <option value="all">All Priorities</option>\n                        <option value="high">High Priority</option>\n                        <option value="medium">Medium Priority</option>\n                        <option value="low">Low Priority</option>\n                    </select>\n                    <label>\n                        <input type="checkbox" class="filter-unread"> Unread Only\n                    </label>\n                </div>\n                <div class="notifications-list"></div>\n                <div class="notifications-empty" style="display: none;">\n                    <p>No notifications to display</p>\n                </div>\n            </div>\n        `,document.body.appendChild(this.container),this.createNotificationBadge(),this.setupUIEventHandlers(),this.addStyles()}createNotificationBadge(){let t=document.querySelector(".notification-trigger");t||(t=document.createElement("button"),t.className="notification-trigger floating-notification-button",t.innerHTML='\n                <i class="fas fa-bell"></i>\n                <span class="notification-badge">0</span>\n            ',document.body.appendChild(t)),this.badge=t.querySelector(".notification-badge"),t.addEventListener("click",()=>{this.togglePanel()})}setupUIEventHandlers(){const t=this.container.querySelector(".notifications-panel");t.querySelector(".mark-all-read").addEventListener("click",()=>{this.markAllAsRead()}),t.querySelector(".clear-all").addEventListener("click",()=>{this.clearAll()}),t.querySelector(".close-panel").addEventListener("click",()=>{this.hidePanel()}),t.querySelector(".filter-type").addEventListener("change",t=>{this.setFilter("types",t.target.value?[t.target.value]:[])}),t.querySelector(".filter-priority").addEventListener("change",t=>{this.setFilter("priority",t.target.value)}),t.querySelector(".filter-unread").addEventListener("change",t=>{this.setFilter("unreadOnly",t.target.checked)}),document.addEventListener("click",t=>{this.container.contains(t.target)||t.target.closest(".notification-trigger")||this.hidePanel()})}addStyles(){document.head.insertAdjacentHTML("beforeend",'\n            <style id="notification-system-styles">\n                .notification-container {\n                    position: fixed;\n                    top: 0;\n                    right: 0;\n                    z-index: 10000;\n                    font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, sans-serif;\n                }\n                \n                .notifications-toast-area {\n                    position: fixed;\n                    top: 20px;\n                    right: 20px;\n                    z-index: 10001;\n                    pointer-events: none;\n                }\n                \n                .notification-toast {\n                    background: white;\n                    border-radius: 8px;\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n                    padding: 16px;\n                    margin-bottom: 12px;\n                    max-width: 400px;\n                    min-width: 300px;\n                    pointer-events: auto;\n                    transform: translateX(100%);\n                    transition: transform 0.3s ease;\n                    border-left: 4px solid;\n                }\n                \n                .notification-toast.show {\n                    transform: translateX(0);\n                }\n                \n                .notification-toast.removing {\n                    transform: translateX(100%);\n                    opacity: 0;\n                }\n                \n                .notification-header {\n                    display: flex;\n                    align-items: center;\n                    margin-bottom: 8px;\n                }\n                \n                .notification-icon {\n                    font-size: 20px;\n                    margin-right: 12px;\n                }\n                \n                .notification-title {\n                    font-weight: 600;\n                    margin: 0;\n                    flex: 1;\n                }\n                \n                .notification-time {\n                    font-size: 12px;\n                    color: #6b7280;\n                }\n                \n                .notification-message {\n                    color: #374151;\n                    margin: 0;\n                    line-height: 1.4;\n                }\n                \n                .notification-actions {\n                    margin-top: 12px;\n                    display: flex;\n                    gap: 8px;\n                }\n                \n                .notification-action {\n                    padding: 4px 12px;\n                    border: 1px solid #d1d5db;\n                    background: white;\n                    border-radius: 4px;\n                    font-size: 12px;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .notification-action:hover {\n                    background: #f9fafb;\n                }\n                \n                .notification-action.primary {\n                    background: #3b82f6;\n                    color: white;\n                    border-color: #3b82f6;\n                }\n                \n                .notification-action.primary:hover {\n                    background: #2563eb;\n                }\n                \n                .notification-close {\n                    position: absolute;\n                    top: 8px;\n                    right: 8px;\n                    background: none;\n                    border: none;\n                    font-size: 18px;\n                    cursor: pointer;\n                    color: #6b7280;\n                    padding: 4px;\n                    line-height: 1;\n                }\n                \n                .notification-close:hover {\n                    color: #374151;\n                }\n                \n                .notifications-panel {\n                    position: fixed;\n                    top: 60px;\n                    right: 20px;\n                    width: 400px;\n                    max-height: 600px;\n                    background: white;\n                    border-radius: 8px;\n                    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);\n                    display: flex;\n                    flex-direction: column;\n                    overflow: hidden;\n                }\n                \n                .notifications-header {\n                    padding: 16px;\n                    border-bottom: 1px solid #e5e7eb;\n                    display: flex;\n                    justify-content: space-between;\n                    align-items: center;\n                }\n                \n                .notifications-header h3 {\n                    margin: 0;\n                    font-size: 16px;\n                    font-weight: 600;\n                }\n                \n                .notifications-controls {\n                    display: flex;\n                    gap: 8px;\n                    align-items: center;\n                }\n                \n                .notifications-controls button {\n                    padding: 4px 8px;\n                    border: 1px solid #d1d5db;\n                    background: white;\n                    border-radius: 4px;\n                    font-size: 12px;\n                    cursor: pointer;\n                }\n                \n                .notifications-controls .close-panel {\n                    border: none;\n                    font-size: 18px;\n                    padding: 0;\n                    width: 24px;\n                    height: 24px;\n                }\n                \n                .notifications-filters {\n                    padding: 12px 16px;\n                    border-bottom: 1px solid #e5e7eb;\n                    display: flex;\n                    gap: 12px;\n                    align-items: center;\n                    font-size: 12px;\n                }\n                \n                .notifications-filters select {\n                    padding: 4px 8px;\n                    border: 1px solid #d1d5db;\n                    border-radius: 4px;\n                    font-size: 12px;\n                }\n                \n                .notifications-list {\n                    flex: 1;\n                    overflow-y: auto;\n                    max-height: 400px;\n                }\n                \n                .notification-item {\n                    padding: 12px 16px;\n                    border-bottom: 1px solid #f3f4f6;\n                    cursor: pointer;\n                    transition: background-color 0.2s;\n                }\n                \n                .notification-item:hover {\n                    background: #f9fafb;\n                }\n                \n                .notification-item.unread {\n                    background: #eff6ff;\n                    border-left: 3px solid #3b82f6;\n                }\n                \n                .notification-item .notification-header {\n                    padding: 0;\n                    border: none;\n                    margin-bottom: 4px;\n                }\n                \n                .notification-item .notification-title {\n                    font-size: 14px;\n                }\n                \n                .notification-item .notification-message {\n                    font-size: 12px;\n                    margin-bottom: 4px;\n                }\n                \n                .notification-item .notification-time {\n                    font-size: 11px;\n                }\n                \n                .notifications-empty {\n                    padding: 40px 16px;\n                    text-align: center;\n                    color: #6b7280;\n                }\n                \n                .floating-notification-button {\n                    position: fixed;\n                    bottom: 20px;\n                    right: 20px;\n                    width: 60px;\n                    height: 60px;\n                    border-radius: 50%;\n                    background: #3b82f6;\n                    color: white;\n                    border: none;\n                    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n                    cursor: pointer;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    font-size: 20px;\n                    transition: transform 0.2s, box-shadow 0.2s;\n                    z-index: 9999;\n                }\n                \n                .floating-notification-button:hover {\n                    transform: scale(1.05);\n                    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);\n                }\n                \n                .notification-badge {\n                    position: absolute;\n                    top: -8px;\n                    right: -8px;\n                    background: #ef4444;\n                    color: white;\n                    border-radius: 50%;\n                    width: 20px;\n                    height: 20px;\n                    font-size: 10px;\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                    font-weight: 600;\n                }\n                \n                .notification-badge.hidden {\n                    display: none;\n                }\n            </style>\n        ')}setupWebSocket(){if(this.config.websocketUrl)try{this.websocket=new WebSocket(this.config.websocketUrl),this.websocket.onopen=()=>{console.log("WebSocket connected"),this.websocketReconnectAttempts=0,this.reconnectDelay=1e3},this.websocket.onmessage=t=>{try{const e=JSON.parse(t.data);this.handleWebSocketMessage(e)}catch(t){console.error("Failed to parse WebSocket message:",t)}},this.websocket.onclose=()=>{console.log("WebSocket disconnected"),this.reconnectWebSocket()},this.websocket.onerror=t=>{console.error("WebSocket error:",t)}}catch(t){console.error("Failed to setup WebSocket:",t)}}handleWebSocketMessage(t){"notification"===t.type?this.show(t.notification):"broadcast"===t.type&&this.show({type:"system.alert",title:t.title||"System Broadcast",message:t.message,priority:"high"})}reconnectWebSocket(){this.websocketReconnectAttempts>=this.maxReconnectAttempts?console.log("Max WebSocket reconnection attempts reached"):(this.websocketReconnectAttempts++,setTimeout(()=>{console.log(`Attempting WebSocket reconnection (${this.websocketReconnectAttempts}/${this.maxReconnectAttempts})`),this.setupWebSocket()},this.reconnectDelay),this.reconnectDelay=Math.min(2*this.reconnectDelay,3e4))}async setupPushNotifications(){if("serviceWorker"in navigator&&"PushManager"in window)try{this.serviceWorkerRegistration=await navigator.serviceWorker.register("/sw.js"),console.log("Service worker registered"),!await this.serviceWorkerRegistration.pushManager.getSubscription()&&this.preferences.pushNotifications&&await this.subscribeToPushNotifications()}catch(t){console.error("Failed to setup push notifications:",t)}else console.log("Push notifications not supported")}async subscribeToPushNotifications(){try{if("granted"!==await Notification.requestPermission())return void console.log("Push notification permission denied");const t=await this.serviceWorkerRegistration.pushManager.subscribe({userVisibleOnly:!0,applicationServerKey:this.urlBase64ToUint8Array(this.vapidPublicKey)});await this.sendSubscriptionToServer(t),console.log("Subscribed to push notifications")}catch(t){console.error("Failed to subscribe to push notifications:",t)}}async sendSubscriptionToServer(t){try{const e=new DashboardAjax;await e.request("save_push_subscription",{subscription:JSON.stringify(t)})}catch(t){console.error("Failed to send subscription to server:",t)}}urlBase64ToUint8Array(t){const e=(t+"=".repeat((4-t.length%4)%4)).replace(/-/g,"+").replace(/_/g,"/"),i=window.atob(e),s=new Uint8Array(i.length);for(let t=0;t<i.length;++t)s[t]=i.charCodeAt(t);return s}show(t){const e={id:++this.notificationId,timestamp:new Date,read:!1,...t},i=this.types[t.type]||this.types["system.alert"];return e.typeConfig=i,this.notifications.unshift(e),this.unreadCount++,this.notifications.length>this.config.maxNotifications&&(this.notifications=this.notifications.slice(0,this.config.maxNotifications)),this.updateBadge(),this.updatePanel(),this.showToast(e),this.config.soundEnabled&&this.preferences.soundNotifications&&this.playSound(i.sound),this.config.desktopNotifications&&this.preferences.desktopNotifications&&this.showDesktopNotification(e),this.saveNotifications(),this.emit("notification:shown",e),e}showToast(t){const e=document.createElement("div");e.className="notification-toast",e.style.borderLeftColor=t.typeConfig.color,e.innerHTML=`\n            <button class="notification-close">&times;</button>\n            <div class="notification-header">\n                <div class="notification-icon">${t.typeConfig.icon}</div>\n                <h4 class="notification-title">${t.title||t.typeConfig.title}</h4>\n                <span class="notification-time">${this.formatTime(t.timestamp)}</span>\n            </div>\n            <p class="notification-message">${t.message}</p>\n            ${t.actions?this.renderActions(t.actions):""}\n        `,this.container.querySelector(".notifications-toast-area").appendChild(e),setTimeout(()=>{e.classList.add("show")},100),e.querySelector(".notification-close").addEventListener("click",()=>{this.removeToast(e)}),t.actions?.forEach((i,s)=>{const n=e.querySelector(`.notification-action[data-index="${s}"]`);n&&n.addEventListener("click",()=>{"function"==typeof i.handler&&i.handler(t),this.removeToast(e)})}),this.config.autoHideDelay>0&&setTimeout(()=>{this.removeToast(e)},this.config.autoHideDelay)}removeToast(t){t.classList.add("removing"),setTimeout(()=>{t.parentNode&&t.parentNode.removeChild(t)},300)}showDesktopNotification(t){if(!("Notification"in window)||"granted"!==Notification.permission)return;const e={body:t.message,icon:"/assets/images/notification-icon.png",tag:`notification-${t.id}`,requireInteraction:"high"===t.typeConfig.priority},i=new Notification(t.title||t.typeConfig.title,e);i.onclick=()=>{window.focus(),this.markAsRead(t.id),this.showPanel(),i.close()}}playSound(t){if(t)try{const e=new Audio(`/assets/sounds/${t}`);e.volume=.5,e.play().catch(t=>{console.log("Could not play notification sound:",t)})}catch(t){console.log("Could not play notification sound:",t)}}markAsRead(t){const e=this.notifications.find(e=>e.id===t);e&&!e.read&&(e.read=!0,this.unreadCount--,this.updateBadge(),this.updatePanel(),this.saveNotifications(),this.emit("notification:read",e))}markAllAsRead(){this.notifications.forEach(t=>{t.read||(t.read=!0)}),this.unreadCount=0,this.updateBadge(),this.updatePanel(),this.saveNotifications(),this.emit("notifications:all_read")}clearAll(){this.notifications=[],this.unreadCount=0,this.updateBadge(),this.updatePanel(),this.saveNotifications(),this.emit("notifications:cleared")}remove(t){const e=this.notifications.findIndex(e=>e.id===t);if(-1!==e){const t=this.notifications[e];t.read||this.unreadCount--,this.notifications.splice(e,1),this.updateBadge(),this.updatePanel(),this.saveNotifications(),this.emit("notification:removed",t)}}updateBadge(){this.badge&&(this.badge.textContent=this.unreadCount,this.badge.classList.toggle("hidden",0===this.unreadCount))}updatePanel(){const t=this.container.querySelector(".notifications-list"),e=this.container.querySelector(".notifications-empty"),i=this.getFilteredNotifications();0===i.length?(t.style.display="none",e.style.display="block"):(t.style.display="block",e.style.display="none",t.innerHTML=i.map(t=>this.renderNotificationItem(t)).join(""),t.querySelectorAll(".notification-item").forEach(t=>{const e=parseInt(t.dataset.id);t.addEventListener("click",()=>{this.markAsRead(e);const t=this.notifications.find(t=>t.id===e);t?.onClick&&t.onClick(t)})}))}renderNotificationItem(t){return`\n            <div class="notification-item ${t.read?"":"unread"}" data-id="${t.id}">\n                <div class="notification-header">\n                    <div class="notification-icon">${t.typeConfig.icon}</div>\n                    <h4 class="notification-title">${t.title||t.typeConfig.title}</h4>\n                    <span class="notification-time">${this.formatTime(t.timestamp)}</span>\n                </div>\n                <p class="notification-message">${t.message}</p>\n                <div class="notification-time">${this.formatRelativeTime(t.timestamp)}</div>\n            </div>\n        `}renderActions(t){return`\n            <div class="notification-actions">\n                ${t.map((t,e)=>`\n                    <button class="notification-action ${t.primary?"primary":""}" data-index="${e}">\n                        ${t.label}\n                    </button>\n                `).join("")}\n            </div>\n        `}showPanel(){this.container.querySelector(".notifications-panel").style.display="flex",this.updatePanel()}hidePanel(){this.container.querySelector(".notifications-panel").style.display="none"}togglePanel(){"flex"===this.container.querySelector(".notifications-panel").style.display?this.hidePanel():this.showPanel()}setFilter(t,e){this.filters[t]=e,this.updatePanel()}getFilteredNotifications(){return this.notifications.filter(t=>!(this.filters.types.length>0&&!this.filters.types.includes(t.type)||"all"!==this.filters.priority&&t.typeConfig.priority!==this.filters.priority||this.filters.unreadOnly&&t.read))}formatTime(t){return new Date(t).toLocaleTimeString([],{hour:"2-digit",minute:"2-digit"})}formatRelativeTime(t){const e=new Date-new Date(t),i=Math.floor(e/6e4),s=Math.floor(e/36e5),n=Math.floor(e/864e5);return i<1?"Just now":i<60?`${i}m ago`:s<24?`${s}h ago`:`${n}d ago`}emit(t,e){(this.handlers.get(t)||[]).forEach(i=>{try{i(e)}catch(e){console.error(`Error in notification event handler (${t}):`,e)}})}on(t,e){this.handlers.has(t)||this.handlers.set(t,[]),this.handlers.get(t).push(e)}off(t,e){const i=this.handlers.get(t)||[],s=i.indexOf(e);-1!==s&&i.splice(s,1)}loadStoredNotifications(){try{const t=localStorage.getItem("dashboard_notifications");if(t){const e=JSON.parse(t);this.notifications=e.notifications||[],this.unreadCount=e.unreadCount||0,this.notificationId=e.lastId||0,this.notifications.forEach(t=>{t.typeConfig=this.types[t.type]||this.types["system.alert"]}),this.updateBadge()}}catch(t){console.error("Failed to load stored notifications:",t)}}saveNotifications(){try{const t={notifications:this.notifications,unreadCount:this.unreadCount,lastId:this.notificationId};localStorage.setItem("dashboard_notifications",JSON.stringify(t))}catch(t){console.error("Failed to save notifications:",t)}}loadPreferences(){try{const t=localStorage.getItem("notification_preferences");t&&(this.preferences={...this.preferences,...JSON.parse(t)})}catch(t){console.error("Failed to load notification preferences:",t)}}savePreferences(){try{localStorage.setItem("notification_preferences",JSON.stringify(this.preferences))}catch(t){console.error("Failed to save notification preferences:",t)}}updatePreferences(t){this.preferences={...this.preferences,...t},this.savePreferences(),this.emit("preferences:updated",this.preferences)}setupCleanup(){setInterval(()=>{const t=new Date(Date.now()-6048e5),e=this.notifications.length;this.notifications=this.notifications.filter(e=>new Date(e.timestamp)>t),this.notifications.length!==e&&(this.saveNotifications(),console.log(`Cleaned up ${e-this.notifications.length} old notifications`))},36e5)}setupVisibilityHandler(){document.addEventListener("visibilitychange",()=>{document.hidden||this.updatePanel()})}requestDesktopPermission(){"Notification"in window&&"default"===Notification.permission&&Notification.requestPermission().then(t=>{console.log("Desktop notification permission:",t)})}getStats(){const t={};return this.notifications.forEach(e=>{t[e.type]||(t[e.type]={total:0,unread:0}),t[e.type].total++,e.read||t[e.type].unread++}),{total:this.notifications.length,unread:this.unreadCount,byType:t,oldestTimestamp:this.notifications.length>0?Math.min(...this.notifications.map(t=>new Date(t.timestamp).getTime())):null}}destroy(){this.websocket&&this.websocket.close(),this.container&&this.container.remove(),this.handlers.clear(),this.saveNotifications(),this.savePreferences()}}}},e={};function i(s){var n=e[s];if(void 0!==n)return n.exports;var a=e[s]={exports:{}};return t[s](a,a.exports,i),a.exports}i.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return i.d(e,{a:e}),e},i.d=function(t,e){for(var s in e)i.o(e,s)&&!i.o(t,s)&&Object.defineProperty(t,s,{enumerable:!0,get:e[s]})},i.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},function(){"use strict";i(480),i(807),i(684),i(266),i(291),i(270),i(161),i(702),i(442),i(973);class t{constructor(){this.core=null,this.integrations=new Map,this.notifications=null,this.initialized=!1,this.integrationConfigs={airtable:{apiKey:window.tpgDashboard?.integrations?.airtable?.apiKey||"",baseId:window.tpgDashboard?.integrations?.airtable?.baseId||"",listingsTable:"Listings",agentsTable:"Agents",leadsTable:"Leads",syncInterval:3e5},mls:{clientId:window.tpgDashboard?.integrations?.mls?.clientId||"",clientSecret:window.tpgDashboard?.integrations?.mls?.clientSecret||"",apiUrl:window.tpgDashboard?.integrations?.mls?.apiUrl||"",tokenUrl:window.tpgDashboard?.integrations?.mls?.tokenUrl||"",dataUrl:window.tpgDashboard?.integrations?.mls?.dataUrl||"",mlsId:window.tpgDashboard?.integrations?.mls?.mlsId||""}}}async init(){if(!this.initialized)try{console.log("Initializing Enhanced Dashboard v3.0.0"),window.DashboardCore&&(this.core=new DashboardCore,await this.core.init()),await this.initNotificationSystem(),await this.initIntegrations(),this.setupEventHandlers(),this.setupRealTimeFeatures(),this.initialized=!0,console.log("Enhanced Dashboard initialized successfully"),this.notifications?.show({type:"system.alert",title:"Dashboard Enhanced",message:"Advanced features and integrations are now active.",priority:"medium"})}catch(t){console.error("Failed to initialize Enhanced Dashboard:",t),this.notifications?.show({type:"sync.error",title:"Initialization Error",message:`Failed to initialize dashboard: ${t.message}`,priority:"high"})}}async initNotificationSystem(){window.NotificationSystem&&(this.notifications=new NotificationSystem({websocketUrl:window.tpgDashboard?.websocketUrl||"",pushNotifications:!0,desktopNotifications:!0,soundEnabled:!0,vapidPublicKey:window.tpgDashboard?.vapidPublicKey||""}),await this.notifications.init(),window.dashboardNotifications=this.notifications)}async initIntegrations(){if(window.AirtableIntegration&&this.integrationConfigs.airtable.apiKey)try{const t=new AirtableIntegration(this.integrationConfigs.airtable);await t.init(),this.integrations.set("airtable",t),console.log("Airtable integration initialized"),this.notifications?.show({type:"sync.completed",title:"Airtable Connected",message:"Airtable integration is active and syncing.",priority:"low"})}catch(t){console.error("Airtable integration failed:",t),this.notifications?.show({type:"sync.error",title:"Airtable Connection Failed",message:t.message,priority:"high"})}if(window.MLSIntegration&&this.integrationConfigs.mls.clientId)try{const t=new MLSIntegration(this.integrationConfigs.mls);await t.init(),this.integrations.set("mls",t),console.log("MLS integration initialized"),this.notifications?.show({type:"sync.completed",title:"MLS Connected",message:"MLS integration is active and syncing.",priority:"low"})}catch(t){console.error("MLS integration failed:",t),this.notifications?.show({type:"sync.error",title:"MLS Connection Failed",message:t.message,priority:"high"})}}setupEventHandlers(){this.integrations.forEach((t,e)=>{t.on("sync:started",t=>{this.notifications?.show({type:"sync.completed",title:"Sync Started",message:`${e.charAt(0).toUpperCase()+e.slice(1)} sync in progress...`,priority:"low"})}),t.on("sync:completed",t=>{this.notifications?.show({type:"sync.completed",title:"Sync Completed",message:`${e.charAt(0).toUpperCase()+e.slice(1)} sync completed. ${t.processed||0} items processed.`,priority:"low"})}),t.on("sync:error",t=>{this.notifications?.show({type:"sync.error",title:"Sync Error",message:`${e.charAt(0).toUpperCase()+e.slice(1)} sync failed: ${t.error?.message}`,priority:"high"})}),t.on("listing:created",t=>{this.notifications?.show({type:"listing.created",title:"New Listing",message:`New listing added: ${t.listing?.address||"Unknown address"}`,priority:"high",actions:[{label:"View Listing",primary:!0,handler:()=>{this.viewListing(t.listing)}}]})}),t.on("listing:updated",t=>{this.notifications?.show({type:"listing.updated",title:"Listing Updated",message:`Listing updated: ${t.listing?.address||"Unknown address"}`,priority:"medium"})})}),this.core&&(this.core.on("listing:saved",t=>{this.notifications?.show({type:"listing.updated",title:"Listing Saved",message:"Listing has been saved successfully.",priority:"medium"})}),this.core.on("lead:received",t=>{this.notifications?.show({type:"lead.received",title:"New Lead",message:`New lead from ${t.lead?.name||"Unknown"} for ${t.listing?.address||"a listing"}`,priority:"high",actions:[{label:"View Lead",primary:!0,handler:()=>{this.viewLead(t.lead)}}]})}))}setupRealTimeFeatures(){setInterval(()=>{this.refreshListings()},3e5),setInterval(()=>{this.syncAllIntegrations()},6e5),setInterval(()=>{this.performHealthCheck()},6e4)}async refreshListings(){try{console.log("Refreshing listings from all sources...");const t=[];this.integrations.forEach((e,i)=>{"function"==typeof e.syncListings&&t.push(e.syncListings().catch(t=>(console.error(`Failed to sync ${i} listings:`,t),{error:t.message,source:i})))});const e=await Promise.all(t);let i=0,s=0;e.forEach(t=>{t.error?s++:i+=t.changes||0}),i>0&&(this.core&&"function"==typeof this.core.refreshListings&&this.core.refreshListings(),this.notifications?.show({type:"sync.completed",title:"Listings Updated",message:`${i} listing(s) synchronized.`,priority:"low"}))}catch(t){console.error("Failed to refresh listings:",t)}}async syncAllIntegrations(){const t=[];if(this.integrations.forEach((e,i)=>{"function"==typeof e.sync&&t.push(e.sync())}),t.length>0)try{await Promise.all(t),console.log("All integrations synced successfully")}catch(t){console.error("Failed to sync some integrations:",t)}}async performHealthCheck(){const t={dashboard:"healthy",integrations:{},notifications:"healthy"};this.core&&this.core.initialized||(t.dashboard="error");for(const[e,i]of this.integrations)try{const s=await i.getStatus();t.integrations[e]=s.status||"unknown"}catch(i){t.integrations[e]="error"}return this.notifications||(t.notifications="error"),("error"===t.dashboard||Object.values(t.integrations).some(t=>"error"===t)||"error"===t.notifications)&&console.warn("Dashboard health check found issues:",t),t}getIntegration(t){return this.integrations.get(t)}getAllIntegrations(){return Array.from(this.integrations.entries()).map(([t,e])=>({name:t,integration:e}))}viewListing(t){t?.id&&(window.location.href=`/wp-admin/post.php?post=${t.id}&action=edit`)}viewLead(t){console.log("View lead:",t)}destroy(){this.integrations.forEach(t=>{"function"==typeof t.destroy&&t.destroy()}),this.notifications&&"function"==typeof this.notifications.destroy&&this.notifications.destroy(),this.core&&"function"==typeof this.core.destroy&&this.core.destroy(),this.initialized=!1}}document.addEventListener("DOMContentLoaded",()=>{window.dashboard=new t,window.dashboard.init()}),window.EnhancedDashboard=t}()}();