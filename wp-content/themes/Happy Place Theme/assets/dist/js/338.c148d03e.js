(self.webpackChunkhappy_place_theme=self.webpackChunkhappy_place_theme||[]).push([[338],{338:function(){class e{constructor(e){console.log("Initializing map with options:",e),this.mapContainer=document.getElementById(e.containerId),this.markers=[],this.infoWindow=null,this.map=null,this.clusterer=null,this.properties=e.properties||[],this.useClusterer=e.clusterer||!1,this.fitBounds=e.fitBounds||!1,this.selectedListingId=null,this.mapStyle=[{featureType:"administrative",elementType:"labels.text.fill",stylers:[{color:"#444444"}]},{featureType:"landscape",elementType:"all",stylers:[{color:"#f2f2f2"}]},{featureType:"poi",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"all",stylers:[{saturation:-100},{lightness:45}]},{featureType:"road.highway",elementType:"all",stylers:[{visibility:"simplified"}]},{featureType:"transit",elementType:"all",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"all",stylers:[{color:"#0ea5e9"},{visibility:"on"}]}],this.bounds=null,this.isInitialized=!1,this.markerAnimationTimeouts=new Map,this.currentInfoWindow=null,this.initialize()}initialize(){if(console.log("Starting map initialization"),this.mapContainer){if(!this.properties||!this.properties.length)return console.error("No properties provided for map"),void(this.mapContainer.innerHTML='<div class="hph-map-error">No properties to display</div>');if(this.properties=this.properties.filter(e=>e.latitude&&e.longitude&&!isNaN(parseFloat(e.latitude))&&!isNaN(parseFloat(e.longitude))),console.log("Filtered properties:",this.properties.length),!this.properties.length)return console.error("No properties with valid coordinates"),void(this.mapContainer.innerHTML='<div class="hph-map-error">No properties with valid locations to display</div>');this.initializeMap()}else console.error("Map container not found")}initializeMap(){console.log("Creating map instance");try{this.map=new google.maps.Map(this.mapContainer,{zoom:10,center:{lat:38.6851,lng:-75.3557},styles:this.mapStyle,mapTypeControl:!1,streetViewControl:!0,fullscreenControl:!0,zoomControl:!0,zoomControlOptions:{position:google.maps.ControlPosition.RIGHT_BOTTOM}}),this.infoWindow=new google.maps.InfoWindow({maxWidth:320}),this.bounds=new google.maps.LatLngBounds,console.log("Adding markers to map"),this.properties.forEach(e=>{const t=new google.maps.LatLng(parseFloat(e.latitude),parseFloat(e.longitude)),i=new google.maps.Marker({position:t,map:this.map,title:e.title,animation:google.maps.Animation.DROP,icon:{path:google.maps.SymbolPath.CIRCLE,fillColor:"Sold"===e.status?"#d32f2f":"#4CAF50",fillOpacity:.9,strokeWeight:1,strokeColor:"#FFFFFF",scale:8}});i.propertyId=e.id,i.addListener("click",()=>{this.showInfoWindow(i,e)}),this.markers.push(i),this.bounds.extend(t)}),this.useClusterer&&window.markerClusterer&&(console.log("Initializing marker clusterer"),this.clusterer=new markerClusterer.MarkerClusterer({map:this.map,markers:this.markers,algorithm:new markerClusterer.SuperClusterAlgorithm({radius:100,maxZoom:16}),renderer:{render:({count:e,position:t})=>new google.maps.Marker({position:t,label:{text:String(e),color:"white",fontSize:"13px",fontWeight:"bold"},icon:{path:google.maps.SymbolPath.CIRCLE,fillColor:"#4285F4",fillOpacity:.9,strokeWeight:1,strokeColor:"#FFFFFF",scale:18},zIndex:Number(google.maps.Marker.MAX_ZINDEX)+e})}})),this.fitBounds&&!this.bounds.isEmpty()&&this.markers.length>1?(console.log("Fitting map to bounds"),this.map.fitBounds(this.bounds,{padding:{top:50,right:50,bottom:50,left:50}})):console.log("Using default Sussex County center"),this.isInitialized=!0,console.log("Map initialization complete")}catch(e){console.error("Error initializing map:",e),this.mapContainer.innerHTML='<div class="hph-map-error">Error loading map</div>'}}updateProperties(e,t=!0){console.log("Updating map properties:",e.length),this.markerAnimationTimeouts.forEach(e=>clearTimeout(e)),this.markerAnimationTimeouts.clear(),this.infoWindow&&this.infoWindow.close();const i=new Map;this.markers.forEach(e=>{i.set(e.propertyId,e)});const o=new Map;e.forEach(e=>{e.latitude&&e.longitude&&!isNaN(parseFloat(e.latitude))&&!isNaN(parseFloat(e.longitude))&&o.set(e.id,e)}),this.markers=this.markers.filter(e=>!!o.has(e.propertyId)||(this.clusterer&&this.clusterer.removeMarker(e),e.setMap(null),!1));const s=[],r=new google.maps.LatLngBounds;let a=0;e.forEach(e=>{if(!e.latitude||!e.longitude||isNaN(parseFloat(e.latitude))||isNaN(parseFloat(e.longitude)))return;const o=new google.maps.LatLng(parseFloat(e.latitude),parseFloat(e.longitude));let n=i.get(e.id);n?(n.setPosition(o),n.setIcon({path:google.maps.SymbolPath.CIRCLE,fillColor:"Sold"===e.status?"#d32f2f":"#4CAF50",fillOpacity:.9,strokeWeight:1,strokeColor:"#FFFFFF",scale:8})):(n=new google.maps.Marker({position:o,map:this.map,title:e.title,icon:{path:google.maps.SymbolPath.CIRCLE,fillColor:"Sold"===e.status?"#d32f2f":"#4CAF50",fillOpacity:.9,strokeWeight:1,strokeColor:"#FFFFFF",scale:8}}),n.propertyId=e.id,n.addListener("click",()=>{this.showInfoWindow(n,e)}),t&&(n.setOpacity(0),this.markerAnimationTimeouts.set(e.id,setTimeout(()=>{n.setAnimation(google.maps.Animation.DROP),n.setOpacity(1)},a)),a+=50)),s.push(n),r.extend(o)}),this.clusterer&&(this.clusterer.clearMarkers(),this.clusterer.addMarkers(s)),this.markers=s,this.properties=e,this.bounds=r,!r.isEmpty()&&this.markers.length>1?this.map.fitBounds(r,{padding:{top:50,right:50,bottom:50,left:50}}):1===this.markers.length&&(this.map.setCenter(this.markers[0].getPosition()),this.map.setZoom(15))}clearMarkers(){this.markers.forEach(e=>{e.setMap(null)}),this.clusterer&&this.clusterer.clearMarkers(),this.markers=[],this.properties=[],this.infoWindow&&this.infoWindow.close()}showInfoWindow(e,t){const i="Sold"===t.status?"sold":"active",o=t.status||"Active",s=`\n            <div class="hph-map-info-window">\n                <div class="hph-info-image">\n                    ${t.photo?`\n                        <a href="${t.permalink}">\n                            <img src="${t.photo}" alt="${t.title}" loading="lazy">\n                        </a>\n                    `:'\n                        <div class="hph-info-no-image">\n                            <i class="fas fa-home"></i>\n                        </div>\n                    '}\n                    <div class="hph-info-status ${i}">${o}</div>\n                </div>\n                <div class="hph-info-content">\n                    <h3 class="hph-info-title">\n                        <a href="${t.permalink}">${t.title}</a>\n                    </h3>\n                    <div class="hph-info-price">\n                        ${t.price?`$${this.formatNumber(t.price)}`:"Price Upon Request"}\n                    </div>\n                    <div class="hph-info-address" title="${t.address}">\n                        ${t.address}\n                    </div>\n                    <div class="hph-info-details">\n                        ${t.bedrooms?`\n                            <span class="hph-info-beds" title="${t.bedrooms} Bedrooms">\n                                <i class="fas fa-bed"></i>${t.bedrooms} bd\n                            </span>\n                        `:""}\n                        ${t.bathrooms?`\n                            <span class="hph-info-baths" title="${t.bathrooms} Bathrooms">\n                                <i class="fas fa-bath"></i>${t.bathrooms} ba\n                            </span>\n                        `:""}\n                        ${t.square_footage?`\n                            <span class="hph-info-sqft" title="${this.formatNumber(t.square_footage)} Square Feet">\n                                <i class="fas fa-ruler-combined"></i>${this.formatNumber(t.square_footage)} sf\n                            </span>\n                        `:""}\n                    </div>\n                </div>\n            </div>\n        `;this.infoWindow&&this.infoWindow.close(),this.infoWindow=new google.maps.InfoWindow({content:s,maxWidth:320,pixelOffset:new google.maps.Size(0,-30)}),this.infoWindow.open(this.map,e),this.currentInfoWindow=this.infoWindow}formatNumber(e){return e?e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):""}highlightProperty(e){this.markers.forEach(e=>{e.setAnimation(null)});const t=this.markers.find(t=>t.propertyId===e);t&&(this.map.panTo(t.getPosition()),t.setAnimation(google.maps.Animation.BOUNCE),setTimeout(()=>{t.setAnimation(null)},1400))}}jQuery(document).ready(function(t){const i=document.querySelectorAll(".hph-listings-map");if(0===i.length)return void console.log("No map containers found on page");i.forEach(t=>{if(t.dataset.properties)try{const i=JSON.parse(t.dataset.properties);if(window.location.search.includes("debug=1")&&console.log("Properties data:",i),!Array.isArray(i))return console.error("Invalid properties data:",i),void(t.innerHTML='<div class="hph-map-error">Error: Invalid property data</div>');const o=i.filter(e=>{const t=e&&"object"==typeof e&&e.latitude&&e.longitude&&!isNaN(parseFloat(e.latitude))&&!isNaN(parseFloat(e.longitude));return!t&&window.location.search.includes("debug=1")&&console.warn("Invalid property:",e),t});if(0===o.length)return console.warn("No valid properties to display on map"),void(t.innerHTML='<div class="hph-map-error">No properties with valid locations to display</div>');const s=new e({containerId:t.id,apiKey:window.hphMapConfig?.apiKey||"",properties:o,useClusterer:"true"===t.dataset.clusterer,fitBounds:"true"===t.dataset.fitBounds,callbacks:{onMarkerClick:e=>{document.querySelectorAll(".hph-map-listing-card").forEach(t=>{parseInt(t.dataset.listingId,10)===e?(t.classList.add("highlighted"),t.scrollIntoView({behavior:"smooth",block:"center"})):t.classList.remove("highlighted")})},onInfoWindowClose:()=>{document.querySelectorAll(".hph-map-listing-card").forEach(e=>{e.classList.remove("highlighted")})}}});t.hphMap=s,document.querySelectorAll(".hph-map-listing-card").forEach(e=>{e.addEventListener("click",()=>{const t=parseInt(e.dataset.listingId,10);s&&s.highlightProperty(t)})})}catch(e){console.error("Error initializing map:",e)}else console.warn("No properties data found for map container:",t.id)});const o=document.querySelector(".hph-filters-header"),s=document.querySelector(".hph-map-filters");if(o&&s){s.classList.add("collapsed"),o.addEventListener("click",function(){s.classList.toggle("collapsed")});const e=document.querySelector(".hph-filters-toggle-btn");e&&e.addEventListener("click",function(e){e.stopPropagation(),s.classList.toggle("collapsed")})}})}}]);